package met

import (
	// "github.com/AbdouTlili/onos-e2-sm/servicemodels/e2sm_met/pdubuilder"

	"fmt"
	"testing"

	e2smmet "github.com/AbdouTlili/onos-e2-sm/servicemodels/e2sm_met/v1/e2sm-met-go"
	"github.com/onosproject/onos-lib-go/pkg/asn1/aper"
	"gotest.tools/assert"
	// hexlib "github.com/onosproject/onos-lib-go/pkg/hex"
)

var aperBytesIndMes = []byte{0x00, 0x09, 0x00, 0x04, 0x00, 0x0b, 0x02, 0x41, 0x41, 0x41, 0x00, 0x04, 0x02, 0x41, 0x41, 0x41,
	0x02, 0x41, 0x41, 0x42, 0x02, 0x41, 0x41, 0x43, 0x02, 0x41, 0x41, 0x44, 0x02, 0x41, 0x41, 0x45, 0x00, 0x0b, 0x02, 0x41, 0x41,
	0x41, 0x00, 0x04, 0x02, 0x41, 0x41, 0x41, 0x02, 0x41, 0x41, 0x42, 0x02, 0x41, 0x41, 0x43, 0x02, 0x41, 0x41, 0x44, 0x02, 0x41,
	0x41, 0x45, 0x00, 0x0b, 0x02, 0x41, 0x41, 0x41, 0x00, 0x04, 0x02, 0x41, 0x41, 0x41, 0x02, 0x41, 0x41, 0x42, 0x02, 0x41, 0x41,
	0x43, 0x02, 0x41, 0x41, 0x44, 0x02, 0x41, 0x41, 0x45, 0x00, 0x0b, 0x02, 0x41, 0x41, 0x41, 0x00, 0x04, 0x02, 0x41, 0x41, 0x41,
	0x02, 0x41, 0x41, 0x42, 0x02, 0x41, 0x41, 0x43, 0x02, 0x41, 0x41, 0x44, 0x02, 0x41, 0x41, 0x45, 0x00, 0x0b, 0x02, 0x41, 0x41,
	0x41, 0x00, 0x04, 0x02, 0x41, 0x41, 0x41, 0x02, 0x41, 0x41, 0x42, 0x02, 0x41, 0x41, 0x43, 0x02, 0x41, 0x41, 0x44, 0x02, 0x41,
	0x41, 0x45}

func Test_perIndicationMessageCompareBytes(t *testing.T) {

	result := e2smmet.E2SmMetIndicationMessage{}
	err := aper.UnmarshalWithParams(aperBytesIndMes, &result, "valueExt", e2smmet.E2smMetChoicemap, nil)
	assert.NilError(t, err)

	fmt.Println(result.IndicationMessageFormats.GetIndicationMessageFormat1().GetSubscriptId())
	fmt.Println(result.IndicationMessageFormats.GetIndicationMessageFormat1().GetMeasData().Value[2].UeId)
	fmt.Println(result.IndicationMessageFormats.GetIndicationMessageFormat1().GetMeasData().Value[2].UeTag)

}
