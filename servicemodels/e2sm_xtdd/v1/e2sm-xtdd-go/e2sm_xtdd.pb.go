////////////////////// e2sm-xtdd-ies.proto //////////////////////
// Protobuf generated from /e2sm-xtdd.asn1 by asn1c-0.9.29
// E2SM-XTDD-IEs { iso(1) identified-organization(3) dod(6) internet(1) private(4) enterprise(1) oran(53148) e2(1) version2(2) e2sm(2) e2sm-XTDD-IEs(97) }

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.19.4
// source: e2sm_xtdd/v1/e2sm_xtdd.proto

package e2sm_xtdd_go

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/onosproject/onos-lib-go/api/asn1/v1/asn1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enumerated from e2sm-xtdd.asn1:221
type XtddCommand int32

const (
	XtddCommand_XTDD_COMMAND_CONTROL1 XtddCommand = 0
)

// Enum value maps for XtddCommand.
var (
	XtddCommand_name = map[int32]string{
		0: "XTDD_COMMAND_CONTROL1",
	}
	XtddCommand_value = map[string]int32{
		"XTDD_COMMAND_CONTROL1": 0,
	}
)

func (x XtddCommand) Enum() *XtddCommand {
	p := new(XtddCommand)
	*p = x
	return p
}

func (x XtddCommand) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (XtddCommand) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_enumTypes[0].Descriptor()
}

func (XtddCommand) Type() protoreflect.EnumType {
	return &file_e2sm_xtdd_v1_e2sm_xtdd_proto_enumTypes[0]
}

func (x XtddCommand) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use XtddCommand.Descriptor instead.
func (XtddCommand) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{0}
}

// range of Integer from e2sm-xtdd.asn1:12
// {TimeStamp}
type TimeStamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:4,sizeUB:4,"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:4,sizeUB:4,"`
}

func (x *TimeStamp) Reset() {
	*x = TimeStamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeStamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeStamp) ProtoMessage() {}

func (x *TimeStamp) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeStamp.ProtoReflect.Descriptor instead.
func (*TimeStamp) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{0}
}

func (x *TimeStamp) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from e2sm-xtdd.asn1:16
// {CellObjectID}
type CellObjectId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:255,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:255,"`
}

func (x *CellObjectId) Reset() {
	*x = CellObjectId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellObjectId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellObjectId) ProtoMessage() {}

func (x *CellObjectId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellObjectId.ProtoReflect.Descriptor instead.
func (*CellObjectId) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{1}
}

func (x *CellObjectId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-xtdd.asn1:18
// {GranularityPeriod}
type GranularityPeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:4294967295,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:4294967295,"`
}

func (x *GranularityPeriod) Reset() {
	*x = GranularityPeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GranularityPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GranularityPeriod) ProtoMessage() {}

func (x *GranularityPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GranularityPeriod.ProtoReflect.Descriptor instead.
func (*GranularityPeriod) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{2}
}

func (x *GranularityPeriod) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-xtdd.asn1:20
// {SubscriptionID}
type SubscriptionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:4294967295,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:4294967295,"`
}

func (x *SubscriptionId) Reset() {
	*x = SubscriptionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionId) ProtoMessage() {}

func (x *SubscriptionId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionId.ProtoReflect.Descriptor instead.
func (*SubscriptionId) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{3}
}

func (x *SubscriptionId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-xtdd.asn1:24
// {GlobalXTDDnode-ID}
type GlobalXtddnodeID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:4294967295,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:4294967295,"`
}

func (x *GlobalXtddnodeID) Reset() {
	*x = GlobalXtddnodeID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalXtddnodeID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalXtddnodeID) ProtoMessage() {}

func (x *GlobalXtddnodeID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalXtddnodeID.ProtoReflect.Descriptor instead.
func (*GlobalXtddnodeID) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{4}
}

func (x *GlobalXtddnodeID) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm-xtdd.asn1:29
// @inject_tag: aper:"valueExt"
// {RANfunction-Name}
type RanfunctionName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150,"
	RanFunctionShortName string `protobuf:"bytes,1,opt,name=ran_function_short_name,json=ranFunction-ShortName,proto3" json:"ran_function_short_name,omitempty" aper:"sizeExt,sizeLB:1,sizeUB:150,"`
	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:1000,"
	RanFunctionE2SmOid string `protobuf:"bytes,2,opt,name=ran_function_e2_sm_oid,json=ranFunction-E2SM-OID,proto3" json:"ran_function_e2_sm_oid,omitempty" aper:"sizeExt,sizeLB:1,sizeUB:1000,"`
	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150,"
	RanFunctionDescription string `protobuf:"bytes,3,opt,name=ran_function_description,json=ranFunction-Description,proto3" json:"ran_function_description,omitempty" aper:"sizeExt,sizeLB:1,sizeUB:150,"`
}

func (x *RanfunctionName) Reset() {
	*x = RanfunctionName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionName) ProtoMessage() {}

func (x *RanfunctionName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionName.ProtoReflect.Descriptor instead.
func (*RanfunctionName) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{5}
}

func (x *RanfunctionName) GetRanFunctionShortName() string {
	if x != nil {
		return x.RanFunctionShortName
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionE2SmOid() string {
	if x != nil {
		return x.RanFunctionE2SmOid
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionDescription() string {
	if x != nil {
		return x.RanFunctionDescription
	}
	return ""
}

// constant Integer from e2sm-xtdd.asn1:42
// {-}
type MaxofUe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65535,valueUB:65535,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65535,valueUB:65535,"`
}

func (x *MaxofUe) Reset() {
	*x = MaxofUe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxofUe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxofUe) ProtoMessage() {}

func (x *MaxofUe) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxofUe.ProtoReflect.Descriptor instead.
func (*MaxofUe) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{6}
}

func (x *MaxofUe) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-xtdd.asn1:44
// {UEID}
type Ueid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4294967295,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4294967295,"`
}

func (x *Ueid) Reset() {
	*x = Ueid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ueid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ueid) ProtoMessage() {}

func (x *Ueid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ueid.ProtoReflect.Descriptor instead.
func (*Ueid) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{7}
}

func (x *Ueid) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-xtdd.asn1:46
// {UETag}
type Uetag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:150,"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:150,"`
}

func (x *Uetag) Reset() {
	*x = Uetag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uetag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uetag) ProtoMessage() {}

func (x *Uetag) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uetag.ProtoReflect.Descriptor instead.
func (*Uetag) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{8}
}

func (x *Uetag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// sequence from e2sm-xtdd.asn1:49
// @inject_tag: aper:"valueExt"
// {UEItem}
type Ueitem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UeId *Ueid `protobuf:"bytes,1,opt,name=ue_id,json=ueID,proto3" json:"ue_id,omitempty"`
	// @inject_tag: aper:"optional,"
	UeTag *Uetag `protobuf:"bytes,2,opt,name=ue_tag,json=ueTag,proto3,oneof" json:"ue_tag,omitempty" aper:"optional,"`
}

func (x *Ueitem) Reset() {
	*x = Ueitem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ueitem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ueitem) ProtoMessage() {}

func (x *Ueitem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ueitem.ProtoReflect.Descriptor instead.
func (*Ueitem) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{9}
}

func (x *Ueitem) GetUeId() *Ueid {
	if x != nil {
		return x.UeId
	}
	return nil
}

func (x *Ueitem) GetUeTag() *Uetag {
	if x != nil {
		return x.UeTag
	}
	return nil
}

// sequence from e2sm-xtdd.asn1:58
// {MeasurementInfoList}
type MeasurementInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:65535"
	Value []*MeasurementInfoItem `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:65535"`
}

func (x *MeasurementInfoList) Reset() {
	*x = MeasurementInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementInfoList) ProtoMessage() {}

func (x *MeasurementInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementInfoList.ProtoReflect.Descriptor instead.
func (*MeasurementInfoList) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{10}
}

func (x *MeasurementInfoList) GetValue() []*MeasurementInfoItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from e2sm-xtdd.asn1:58
// {MeasurementInfoItem}
type MeasurementInfoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:150,"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:150,"`
}

func (x *MeasurementInfoItem) Reset() {
	*x = MeasurementInfoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementInfoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementInfoItem) ProtoMessage() {}

func (x *MeasurementInfoItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementInfoItem.ProtoReflect.Descriptor instead.
func (*MeasurementInfoItem) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{11}
}

func (x *MeasurementInfoItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// sequence from e2sm-xtdd.asn1:62
// {MeasurementData}
type MeasurementData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:65535"
	Value []*MeasurementRecord `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:1,sizeUB:65535"`
}

func (x *MeasurementData) Reset() {
	*x = MeasurementData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementData) ProtoMessage() {}

func (x *MeasurementData) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementData.ProtoReflect.Descriptor instead.
func (*MeasurementData) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{12}
}

func (x *MeasurementData) GetValue() []*MeasurementRecord {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm-xtdd.asn1:63
// @inject_tag: aper:"valueExt"
// {MeasurementRecord}
type MeasurementRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UeId  *Ueid  `protobuf:"bytes,1,opt,name=ue_id,json=ueID,proto3" json:"ue_id,omitempty"`
	UeTag *Uetag `protobuf:"bytes,2,opt,name=ue_tag,json=ueTag,proto3" json:"ue_tag,omitempty"`
	// @inject_tag: aper:"sizeLB:1,sizeUB:65535"
	MeasRecordItemList *MeasurementRecordItemList `protobuf:"bytes,3,opt,name=meas_record_item_list,json=measRecordItemList,proto3" json:"meas_record_item_list,omitempty" aper:"sizeLB:1,sizeUB:65535"`
}

func (x *MeasurementRecord) Reset() {
	*x = MeasurementRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementRecord) ProtoMessage() {}

func (x *MeasurementRecord) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementRecord.ProtoReflect.Descriptor instead.
func (*MeasurementRecord) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{13}
}

func (x *MeasurementRecord) GetUeId() *Ueid {
	if x != nil {
		return x.UeId
	}
	return nil
}

func (x *MeasurementRecord) GetUeTag() *Uetag {
	if x != nil {
		return x.UeTag
	}
	return nil
}

func (x *MeasurementRecord) GetMeasRecordItemList() *MeasurementRecordItemList {
	if x != nil {
		return x.MeasRecordItemList
	}
	return nil
}

// sequence from e2sm-xtdd.asn1:71
// {MeasurementRecordItemList}
type MeasurementRecordItemList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:65535"
	Value []*MeasurementRecordItem `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:65535"`
}

func (x *MeasurementRecordItemList) Reset() {
	*x = MeasurementRecordItemList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementRecordItemList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementRecordItemList) ProtoMessage() {}

func (x *MeasurementRecordItemList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementRecordItemList.ProtoReflect.Descriptor instead.
func (*MeasurementRecordItemList) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{14}
}

func (x *MeasurementRecordItemList) GetValue() []*MeasurementRecordItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from e2sm-xtdd.asn1:71
// {MeasurementRecordItem}
type MeasurementRecordItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:150,"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:150,"`
}

func (x *MeasurementRecordItem) Reset() {
	*x = MeasurementRecordItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementRecordItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementRecordItem) ProtoMessage() {}

func (x *MeasurementRecordItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementRecordItem.ProtoReflect.Descriptor instead.
func (*MeasurementRecordItem) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{15}
}

func (x *MeasurementRecordItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// sequence from e2sm-xtdd.asn1:75
// {MeasurementInfo-Action-List}
type MeasurementInfoActionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:65535"
	Value []*MeasurementInfoActionItem `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:1,sizeUB:65535"`
}

func (x *MeasurementInfoActionList) Reset() {
	*x = MeasurementInfoActionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementInfoActionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementInfoActionList) ProtoMessage() {}

func (x *MeasurementInfoActionList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementInfoActionList.ProtoReflect.Descriptor instead.
func (*MeasurementInfoActionList) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{16}
}

func (x *MeasurementInfoActionList) GetValue() []*MeasurementInfoActionItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm-xtdd.asn1:76
// @inject_tag: aper:"valueExt"
// {MeasurementInfo-Action-Item}
type MeasurementInfoActionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeasName *MeasurementTypeName `protobuf:"bytes,1,opt,name=meas_name,json=measName,proto3" json:"meas_name,omitempty"`
	// @inject_tag: aper:"optional,"
	MeasId *MeasurementTypeId `protobuf:"bytes,2,opt,name=meas_id,json=measID,proto3,oneof" json:"meas_id,omitempty" aper:"optional,"`
}

func (x *MeasurementInfoActionItem) Reset() {
	*x = MeasurementInfoActionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementInfoActionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementInfoActionItem) ProtoMessage() {}

func (x *MeasurementInfoActionItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementInfoActionItem.ProtoReflect.Descriptor instead.
func (*MeasurementInfoActionItem) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{17}
}

func (x *MeasurementInfoActionItem) GetMeasName() *MeasurementTypeName {
	if x != nil {
		return x.MeasName
	}
	return nil
}

func (x *MeasurementInfoActionItem) GetMeasId() *MeasurementTypeId {
	if x != nil {
		return x.MeasId
	}
	return nil
}

// range of Integer from e2sm-xtdd.asn1:81
// {MeasurementTypeName}
type MeasurementTypeName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeExt,sizeLB:1,sizeUB:150"`
}

func (x *MeasurementTypeName) Reset() {
	*x = MeasurementTypeName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementTypeName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementTypeName) ProtoMessage() {}

func (x *MeasurementTypeName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementTypeName.ProtoReflect.Descriptor instead.
func (*MeasurementTypeName) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{18}
}

func (x *MeasurementTypeName) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// range of Integer from e2sm-xtdd.asn1:83
// {MeasurementTypeID}
type MeasurementTypeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:1,valueUB:65535,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueExt,valueLB:1,valueUB:65535,"`
}

func (x *MeasurementTypeId) Reset() {
	*x = MeasurementTypeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementTypeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementTypeId) ProtoMessage() {}

func (x *MeasurementTypeId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementTypeId.ProtoReflect.Descriptor instead.
func (*MeasurementTypeId) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{19}
}

func (x *MeasurementTypeId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// choice from e2sm-xtdd.asn1:95
// @inject_tag: aper:"choiceExt"
// {eventDefinition-formatsE2SM-XTDD-EventTriggerDefinition}
type EventDefinitionformatsE2SmXTddEventTriggerDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-xtdd.asn1:95
	//
	// Types that are assignable to EventDefinitionFormatsE2SmXtddEventTriggerDefinition:
	//	*EventDefinitionformatsE2SmXTddEventTriggerDefinition_EventDefinitionFormat1
	EventDefinitionFormatsE2SmXtddEventTriggerDefinition isEventDefinitionformatsE2SmXTddEventTriggerDefinition_EventDefinitionFormatsE2SmXtddEventTriggerDefinition `protobuf_oneof:"event_definition_formats_e2_sm_xtdd_event_trigger_definition"`
}

func (x *EventDefinitionformatsE2SmXTddEventTriggerDefinition) Reset() {
	*x = EventDefinitionformatsE2SmXTddEventTriggerDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDefinitionformatsE2SmXTddEventTriggerDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDefinitionformatsE2SmXTddEventTriggerDefinition) ProtoMessage() {}

func (x *EventDefinitionformatsE2SmXTddEventTriggerDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDefinitionformatsE2SmXTddEventTriggerDefinition.ProtoReflect.Descriptor instead.
func (*EventDefinitionformatsE2SmXTddEventTriggerDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{20}
}

func (m *EventDefinitionformatsE2SmXTddEventTriggerDefinition) GetEventDefinitionFormatsE2SmXtddEventTriggerDefinition() isEventDefinitionformatsE2SmXTddEventTriggerDefinition_EventDefinitionFormatsE2SmXtddEventTriggerDefinition {
	if m != nil {
		return m.EventDefinitionFormatsE2SmXtddEventTriggerDefinition
	}
	return nil
}

func (x *EventDefinitionformatsE2SmXTddEventTriggerDefinition) GetEventDefinitionFormat1() *E2SmXTddEventTriggerDefinitionFormat1 {
	if x, ok := x.GetEventDefinitionFormatsE2SmXtddEventTriggerDefinition().(*EventDefinitionformatsE2SmXTddEventTriggerDefinition_EventDefinitionFormat1); ok {
		return x.EventDefinitionFormat1
	}
	return nil
}

type isEventDefinitionformatsE2SmXTddEventTriggerDefinition_EventDefinitionFormatsE2SmXtddEventTriggerDefinition interface {
	isEventDefinitionformatsE2SmXTddEventTriggerDefinition_EventDefinitionFormatsE2SmXtddEventTriggerDefinition()
}

type EventDefinitionformatsE2SmXTddEventTriggerDefinition_EventDefinitionFormat1 struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	EventDefinitionFormat1 *E2SmXTddEventTriggerDefinitionFormat1 `protobuf:"bytes,1,opt,name=event_definition_format1,json=eventDefinition-Format1,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

func (*EventDefinitionformatsE2SmXTddEventTriggerDefinition_EventDefinitionFormat1) isEventDefinitionformatsE2SmXTddEventTriggerDefinition_EventDefinitionFormatsE2SmXtddEventTriggerDefinition() {
}

// sequence from e2sm-xtdd.asn1:97
// @inject_tag: aper:"valueExt"
// {E2SM-XTDD-EventTriggerDefinition}
type E2SmXTddEventTriggerDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"choiceExt,"
	EventDefinitionFormats *EventDefinitionformatsE2SmXTddEventTriggerDefinition `protobuf:"bytes,1,opt,name=event_definition_formats,json=eventDefinition-formats,proto3" json:"event_definition_formats,omitempty" aper:"choiceExt,"`
}

func (x *E2SmXTddEventTriggerDefinition) Reset() {
	*x = E2SmXTddEventTriggerDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmXTddEventTriggerDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmXTddEventTriggerDefinition) ProtoMessage() {}

func (x *E2SmXTddEventTriggerDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmXTddEventTriggerDefinition.ProtoReflect.Descriptor instead.
func (*E2SmXTddEventTriggerDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{21}
}

func (x *E2SmXTddEventTriggerDefinition) GetEventDefinitionFormats() *EventDefinitionformatsE2SmXTddEventTriggerDefinition {
	if x != nil {
		return x.EventDefinitionFormats
	}
	return nil
}

// sequence from e2sm-xtdd.asn1:102
// @inject_tag: aper:"valueExt"
// {E2SM-XTDD-EventTriggerDefinition-Format1}
type E2SmXTddEventTriggerDefinitionFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:4294967295,"
	ReportingPeriod int32 `protobuf:"varint,1,opt,name=reporting_period,json=reportingPeriod,proto3" json:"reporting_period,omitempty" aper:"valueLB:1,valueUB:4294967295,"`
}

func (x *E2SmXTddEventTriggerDefinitionFormat1) Reset() {
	*x = E2SmXTddEventTriggerDefinitionFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmXTddEventTriggerDefinitionFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmXTddEventTriggerDefinitionFormat1) ProtoMessage() {}

func (x *E2SmXTddEventTriggerDefinitionFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmXTddEventTriggerDefinitionFormat1.ProtoReflect.Descriptor instead.
func (*E2SmXTddEventTriggerDefinitionFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{22}
}

func (x *E2SmXTddEventTriggerDefinitionFormat1) GetReportingPeriod() int32 {
	if x != nil {
		return x.ReportingPeriod
	}
	return 0
}

// choice from e2sm-xtdd.asn1:113
// @inject_tag: aper:"choiceExt"
// {actionDefinition-formatsE2SM-XTDD-ActionDefinition}
type ActionDefinitionformatsE2SmXTddActionDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-xtdd.asn1:113
	//
	// Types that are assignable to ActionDefinitionFormatsE2SmXtddActionDefinition:
	//	*ActionDefinitionformatsE2SmXTddActionDefinition_ActionDefinitionFormat1
	ActionDefinitionFormatsE2SmXtddActionDefinition isActionDefinitionformatsE2SmXTddActionDefinition_ActionDefinitionFormatsE2SmXtddActionDefinition `protobuf_oneof:"action_definition_formats_e2_sm_xtdd_action_definition"`
}

func (x *ActionDefinitionformatsE2SmXTddActionDefinition) Reset() {
	*x = ActionDefinitionformatsE2SmXTddActionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionDefinitionformatsE2SmXTddActionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionDefinitionformatsE2SmXTddActionDefinition) ProtoMessage() {}

func (x *ActionDefinitionformatsE2SmXTddActionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionDefinitionformatsE2SmXTddActionDefinition.ProtoReflect.Descriptor instead.
func (*ActionDefinitionformatsE2SmXTddActionDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{23}
}

func (m *ActionDefinitionformatsE2SmXTddActionDefinition) GetActionDefinitionFormatsE2SmXtddActionDefinition() isActionDefinitionformatsE2SmXTddActionDefinition_ActionDefinitionFormatsE2SmXtddActionDefinition {
	if m != nil {
		return m.ActionDefinitionFormatsE2SmXtddActionDefinition
	}
	return nil
}

func (x *ActionDefinitionformatsE2SmXTddActionDefinition) GetActionDefinitionFormat1() *E2SmXTddActionDefinitionFormat1 {
	if x, ok := x.GetActionDefinitionFormatsE2SmXtddActionDefinition().(*ActionDefinitionformatsE2SmXTddActionDefinition_ActionDefinitionFormat1); ok {
		return x.ActionDefinitionFormat1
	}
	return nil
}

type isActionDefinitionformatsE2SmXTddActionDefinition_ActionDefinitionFormatsE2SmXtddActionDefinition interface {
	isActionDefinitionformatsE2SmXTddActionDefinition_ActionDefinitionFormatsE2SmXtddActionDefinition()
}

type ActionDefinitionformatsE2SmXTddActionDefinition_ActionDefinitionFormat1 struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	ActionDefinitionFormat1 *E2SmXTddActionDefinitionFormat1 `protobuf:"bytes,1,opt,name=action_definition_format1,json=actionDefinition-Format1,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

func (*ActionDefinitionformatsE2SmXTddActionDefinition_ActionDefinitionFormat1) isActionDefinitionformatsE2SmXTddActionDefinition_ActionDefinitionFormatsE2SmXtddActionDefinition() {
}

// sequence from e2sm-xtdd.asn1:111
// @inject_tag: aper:"valueExt"
// {E2SM-XTDD-ActionDefinition}
type E2SmXTddActionDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicStyleType *RicStyleType `protobuf:"bytes,1,opt,name=ric_style_type,json=ric-Style-Type,proto3" json:"ric_style_type,omitempty"`
	// @inject_tag: aper:"choiceExt,"
	ActionDefinitionFormats *ActionDefinitionformatsE2SmXTddActionDefinition `protobuf:"bytes,2,opt,name=action_definition_formats,json=actionDefinition-formats,proto3" json:"action_definition_formats,omitempty" aper:"choiceExt,"`
}

func (x *E2SmXTddActionDefinition) Reset() {
	*x = E2SmXTddActionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmXTddActionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmXTddActionDefinition) ProtoMessage() {}

func (x *E2SmXTddActionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmXTddActionDefinition.ProtoReflect.Descriptor instead.
func (*E2SmXTddActionDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{24}
}

func (x *E2SmXTddActionDefinition) GetRicStyleType() *RicStyleType {
	if x != nil {
		return x.RicStyleType
	}
	return nil
}

func (x *E2SmXTddActionDefinition) GetActionDefinitionFormats() *ActionDefinitionformatsE2SmXTddActionDefinition {
	if x != nil {
		return x.ActionDefinitionFormats
	}
	return nil
}

// sequence from e2sm-xtdd.asn1:120
// @inject_tag: aper:"valueExt"
// {E2SM-XTDD-ActionDefinition-Format1}
type E2SmXTddActionDefinitionFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellObjId    *CellObjectId        `protobuf:"bytes,1,opt,name=cell_obj_id,json=cellObjID,proto3" json:"cell_obj_id,omitempty"`
	MeasInfoList *MeasurementInfoList `protobuf:"bytes,2,opt,name=meas_info_list,json=measInfoList,proto3" json:"meas_info_list,omitempty"`
	GranulPeriod *GranularityPeriod   `protobuf:"bytes,3,opt,name=granul_period,json=granulPeriod,proto3" json:"granul_period,omitempty"`
	SubscriptId  *SubscriptionId      `protobuf:"bytes,4,opt,name=subscript_id,json=subscriptID,proto3" json:"subscript_id,omitempty"`
}

func (x *E2SmXTddActionDefinitionFormat1) Reset() {
	*x = E2SmXTddActionDefinitionFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmXTddActionDefinitionFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmXTddActionDefinitionFormat1) ProtoMessage() {}

func (x *E2SmXTddActionDefinitionFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmXTddActionDefinitionFormat1.ProtoReflect.Descriptor instead.
func (*E2SmXTddActionDefinitionFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{25}
}

func (x *E2SmXTddActionDefinitionFormat1) GetCellObjId() *CellObjectId {
	if x != nil {
		return x.CellObjId
	}
	return nil
}

func (x *E2SmXTddActionDefinitionFormat1) GetMeasInfoList() *MeasurementInfoList {
	if x != nil {
		return x.MeasInfoList
	}
	return nil
}

func (x *E2SmXTddActionDefinitionFormat1) GetGranulPeriod() *GranularityPeriod {
	if x != nil {
		return x.GranulPeriod
	}
	return nil
}

func (x *E2SmXTddActionDefinitionFormat1) GetSubscriptId() *SubscriptionId {
	if x != nil {
		return x.SubscriptId
	}
	return nil
}

// choice from e2sm-xtdd.asn1:133
// @inject_tag: aper:"choiceExt"
// {indicationHeader-formatsE2SM-XTDD-IndicationHeader}
type IndicationHeaderformatsE2SmXTddIndicationHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-xtdd.asn1:133
	//
	// Types that are assignable to IndicationHeaderFormatsE2SmXtddIndicationHeader:
	//	*IndicationHeaderformatsE2SmXTddIndicationHeader_IndicationHeaderFormat1
	IndicationHeaderFormatsE2SmXtddIndicationHeader isIndicationHeaderformatsE2SmXTddIndicationHeader_IndicationHeaderFormatsE2SmXtddIndicationHeader `protobuf_oneof:"indication_header_formats_e2_sm_xtdd_indication_header"`
}

func (x *IndicationHeaderformatsE2SmXTddIndicationHeader) Reset() {
	*x = IndicationHeaderformatsE2SmXTddIndicationHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicationHeaderformatsE2SmXTddIndicationHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicationHeaderformatsE2SmXTddIndicationHeader) ProtoMessage() {}

func (x *IndicationHeaderformatsE2SmXTddIndicationHeader) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicationHeaderformatsE2SmXTddIndicationHeader.ProtoReflect.Descriptor instead.
func (*IndicationHeaderformatsE2SmXTddIndicationHeader) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{26}
}

func (m *IndicationHeaderformatsE2SmXTddIndicationHeader) GetIndicationHeaderFormatsE2SmXtddIndicationHeader() isIndicationHeaderformatsE2SmXTddIndicationHeader_IndicationHeaderFormatsE2SmXtddIndicationHeader {
	if m != nil {
		return m.IndicationHeaderFormatsE2SmXtddIndicationHeader
	}
	return nil
}

func (x *IndicationHeaderformatsE2SmXTddIndicationHeader) GetIndicationHeaderFormat1() *E2SmXTddIndicationHeaderFormat1 {
	if x, ok := x.GetIndicationHeaderFormatsE2SmXtddIndicationHeader().(*IndicationHeaderformatsE2SmXTddIndicationHeader_IndicationHeaderFormat1); ok {
		return x.IndicationHeaderFormat1
	}
	return nil
}

type isIndicationHeaderformatsE2SmXTddIndicationHeader_IndicationHeaderFormatsE2SmXtddIndicationHeader interface {
	isIndicationHeaderformatsE2SmXTddIndicationHeader_IndicationHeaderFormatsE2SmXtddIndicationHeader()
}

type IndicationHeaderformatsE2SmXTddIndicationHeader_IndicationHeaderFormat1 struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	IndicationHeaderFormat1 *E2SmXTddIndicationHeaderFormat1 `protobuf:"bytes,1,opt,name=indication_header_format1,json=indicationHeader-Format1,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

func (*IndicationHeaderformatsE2SmXTddIndicationHeader_IndicationHeaderFormat1) isIndicationHeaderformatsE2SmXTddIndicationHeader_IndicationHeaderFormatsE2SmXtddIndicationHeader() {
}

// sequence from e2sm-xtdd.asn1:135
// @inject_tag: aper:"valueExt"
// {E2SM-XTDD-IndicationHeader}
type E2SmXTddIndicationHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"choiceExt,"
	IndicationHeaderFormats *IndicationHeaderformatsE2SmXTddIndicationHeader `protobuf:"bytes,1,opt,name=indication_header_formats,json=indicationHeader-formats,proto3" json:"indication_header_formats,omitempty" aper:"choiceExt,"`
}

func (x *E2SmXTddIndicationHeader) Reset() {
	*x = E2SmXTddIndicationHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmXTddIndicationHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmXTddIndicationHeader) ProtoMessage() {}

func (x *E2SmXTddIndicationHeader) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmXTddIndicationHeader.ProtoReflect.Descriptor instead.
func (*E2SmXTddIndicationHeader) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{27}
}

func (x *E2SmXTddIndicationHeader) GetIndicationHeaderFormats() *IndicationHeaderformatsE2SmXTddIndicationHeader {
	if x != nil {
		return x.IndicationHeaderFormats
	}
	return nil
}

// sequence from e2sm-xtdd.asn1:140
// @inject_tag: aper:"valueExt"
// {E2SM-XTDD-IndicationHeader-Format1}
type E2SmXTddIndicationHeaderFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColletStartTime *TimeStamp           `protobuf:"bytes,1,opt,name=collet_start_time,json=colletStartTime,proto3" json:"collet_start_time,omitempty"`
	MeasInfoList    *MeasurementInfoList `protobuf:"bytes,2,opt,name=meas_info_list,json=measInfoList,proto3" json:"meas_info_list,omitempty"`
	// @inject_tag: aper:"optional,sizeExt,sizeLB:0,sizeUB:15,"
	FileFormatversion *string `protobuf:"bytes,3,opt,name=file_formatversion,json=fileFormatversion,proto3,oneof" json:"file_formatversion,omitempty" aper:"optional,sizeExt,sizeLB:0,sizeUB:15,"`
	// @inject_tag: aper:"optional,sizeExt,sizeLB:0,sizeUB:400,"
	SenderName *string `protobuf:"bytes,4,opt,name=sender_name,json=senderName,proto3,oneof" json:"sender_name,omitempty" aper:"optional,sizeExt,sizeLB:0,sizeUB:400,"`
	// @inject_tag: aper:"optional,"
	XtddNodeId *GlobalXtddnodeID `protobuf:"bytes,5,opt,name=xtdd_node_id,json=xtddNodeID,proto3,oneof" json:"xtdd_node_id,omitempty" aper:"optional,"`
}

func (x *E2SmXTddIndicationHeaderFormat1) Reset() {
	*x = E2SmXTddIndicationHeaderFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmXTddIndicationHeaderFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmXTddIndicationHeaderFormat1) ProtoMessage() {}

func (x *E2SmXTddIndicationHeaderFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmXTddIndicationHeaderFormat1.ProtoReflect.Descriptor instead.
func (*E2SmXTddIndicationHeaderFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{28}
}

func (x *E2SmXTddIndicationHeaderFormat1) GetColletStartTime() *TimeStamp {
	if x != nil {
		return x.ColletStartTime
	}
	return nil
}

func (x *E2SmXTddIndicationHeaderFormat1) GetMeasInfoList() *MeasurementInfoList {
	if x != nil {
		return x.MeasInfoList
	}
	return nil
}

func (x *E2SmXTddIndicationHeaderFormat1) GetFileFormatversion() string {
	if x != nil && x.FileFormatversion != nil {
		return *x.FileFormatversion
	}
	return ""
}

func (x *E2SmXTddIndicationHeaderFormat1) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

func (x *E2SmXTddIndicationHeaderFormat1) GetXtddNodeId() *GlobalXtddnodeID {
	if x != nil {
		return x.XtddNodeId
	}
	return nil
}

// choice from e2sm-xtdd.asn1:154
// @inject_tag: aper:"choiceExt"
// {indicationMessage-formatsE2SM-XTDD-IndicationMessage}
type IndicationMessageformatsE2SmXTddIndicationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-xtdd.asn1:154
	//
	// Types that are assignable to IndicationMessageFormatsE2SmXtddIndicationMessage:
	//	*IndicationMessageformatsE2SmXTddIndicationMessage_IndicationMessageFormat1
	IndicationMessageFormatsE2SmXtddIndicationMessage isIndicationMessageformatsE2SmXTddIndicationMessage_IndicationMessageFormatsE2SmXtddIndicationMessage `protobuf_oneof:"indication_message_formats_e2_sm_xtdd_indication_message"`
}

func (x *IndicationMessageformatsE2SmXTddIndicationMessage) Reset() {
	*x = IndicationMessageformatsE2SmXTddIndicationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicationMessageformatsE2SmXTddIndicationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicationMessageformatsE2SmXTddIndicationMessage) ProtoMessage() {}

func (x *IndicationMessageformatsE2SmXTddIndicationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicationMessageformatsE2SmXTddIndicationMessage.ProtoReflect.Descriptor instead.
func (*IndicationMessageformatsE2SmXTddIndicationMessage) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{29}
}

func (m *IndicationMessageformatsE2SmXTddIndicationMessage) GetIndicationMessageFormatsE2SmXtddIndicationMessage() isIndicationMessageformatsE2SmXTddIndicationMessage_IndicationMessageFormatsE2SmXtddIndicationMessage {
	if m != nil {
		return m.IndicationMessageFormatsE2SmXtddIndicationMessage
	}
	return nil
}

func (x *IndicationMessageformatsE2SmXTddIndicationMessage) GetIndicationMessageFormat1() *E2SmXTddIndicationMessageFormat1 {
	if x, ok := x.GetIndicationMessageFormatsE2SmXtddIndicationMessage().(*IndicationMessageformatsE2SmXTddIndicationMessage_IndicationMessageFormat1); ok {
		return x.IndicationMessageFormat1
	}
	return nil
}

type isIndicationMessageformatsE2SmXTddIndicationMessage_IndicationMessageFormatsE2SmXtddIndicationMessage interface {
	isIndicationMessageformatsE2SmXTddIndicationMessage_IndicationMessageFormatsE2SmXtddIndicationMessage()
}

type IndicationMessageformatsE2SmXTddIndicationMessage_IndicationMessageFormat1 struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	IndicationMessageFormat1 *E2SmXTddIndicationMessageFormat1 `protobuf:"bytes,1,opt,name=indication_message_format1,json=indicationMessage-Format1,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

func (*IndicationMessageformatsE2SmXTddIndicationMessage_IndicationMessageFormat1) isIndicationMessageformatsE2SmXTddIndicationMessage_IndicationMessageFormatsE2SmXtddIndicationMessage() {
}

// sequence from e2sm-xtdd.asn1:156
// @inject_tag: aper:"valueExt"
// {E2SM-XTDD-IndicationMessage}
type E2SmXTddIndicationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"choiceExt,"
	IndicationMessageFormats *IndicationMessageformatsE2SmXTddIndicationMessage `protobuf:"bytes,1,opt,name=indication_message_formats,json=indicationMessage-formats,proto3" json:"indication_message_formats,omitempty" aper:"choiceExt,"`
}

func (x *E2SmXTddIndicationMessage) Reset() {
	*x = E2SmXTddIndicationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmXTddIndicationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmXTddIndicationMessage) ProtoMessage() {}

func (x *E2SmXTddIndicationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmXTddIndicationMessage.ProtoReflect.Descriptor instead.
func (*E2SmXTddIndicationMessage) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{30}
}

func (x *E2SmXTddIndicationMessage) GetIndicationMessageFormats() *IndicationMessageformatsE2SmXTddIndicationMessage {
	if x != nil {
		return x.IndicationMessageFormats
	}
	return nil
}

// sequence from e2sm-xtdd.asn1:161
// @inject_tag: aper:"valueExt"
// {E2SM-XTDD-IndicationMessage-Format1}
type E2SmXTddIndicationMessageFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptId *SubscriptionId `protobuf:"bytes,1,opt,name=subscript_id,json=subscriptID,proto3" json:"subscript_id,omitempty"`
	// @inject_tag: aper:"optional,"
	CellObjId *CellObjectId `protobuf:"bytes,2,opt,name=cell_obj_id,json=cellObjID,proto3,oneof" json:"cell_obj_id,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	GranulPeriod *GranularityPeriod `protobuf:"bytes,3,opt,name=granul_period,json=granulPeriod,proto3,oneof" json:"granul_period,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	MeasInfoList *MeasurementInfoList `protobuf:"bytes,4,opt,name=meas_info_list,json=measInfoList,proto3,oneof" json:"meas_info_list,omitempty" aper:"optional,"`
	MeasData     *MeasurementData     `protobuf:"bytes,5,opt,name=meas_data,json=measData,proto3" json:"meas_data,omitempty"`
}

func (x *E2SmXTddIndicationMessageFormat1) Reset() {
	*x = E2SmXTddIndicationMessageFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmXTddIndicationMessageFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmXTddIndicationMessageFormat1) ProtoMessage() {}

func (x *E2SmXTddIndicationMessageFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmXTddIndicationMessageFormat1.ProtoReflect.Descriptor instead.
func (*E2SmXTddIndicationMessageFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{31}
}

func (x *E2SmXTddIndicationMessageFormat1) GetSubscriptId() *SubscriptionId {
	if x != nil {
		return x.SubscriptId
	}
	return nil
}

func (x *E2SmXTddIndicationMessageFormat1) GetCellObjId() *CellObjectId {
	if x != nil {
		return x.CellObjId
	}
	return nil
}

func (x *E2SmXTddIndicationMessageFormat1) GetGranulPeriod() *GranularityPeriod {
	if x != nil {
		return x.GranulPeriod
	}
	return nil
}

func (x *E2SmXTddIndicationMessageFormat1) GetMeasInfoList() *MeasurementInfoList {
	if x != nil {
		return x.MeasInfoList
	}
	return nil
}

func (x *E2SmXTddIndicationMessageFormat1) GetMeasData() *MeasurementData {
	if x != nil {
		return x.MeasData
	}
	return nil
}

// sequence from e2sm-xtdd.asn1:174
// @inject_tag: aper:"valueExt"
// {E2SM-XTDD-RANfunction-Description}
type E2SmXTddRAnfunctionDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,"
	RanFunctionName *RanfunctionName `protobuf:"bytes,1,opt,name=ran_function_name,json=ranFunction-Name,proto3" json:"ran_function_name,omitempty" aper:"valueExt,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:255,"
	RicEventTriggerStyleList []*RicEventTriggerStyleItem `protobuf:"bytes,2,rep,name=ric_event_trigger_style_list,json=ric-EventTriggerStyle-List,proto3" json:"ric_event_trigger_style_list,omitempty" aper:"optional,sizeLB:1,sizeUB:255,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:255,"
	RicReportStyleList []*RicReportStyleItem `protobuf:"bytes,3,rep,name=ric_report_style_list,json=ric-ReportStyle-List,proto3" json:"ric_report_style_list,omitempty" aper:"optional,sizeLB:1,sizeUB:255,"`
}

func (x *E2SmXTddRAnfunctionDescription) Reset() {
	*x = E2SmXTddRAnfunctionDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmXTddRAnfunctionDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmXTddRAnfunctionDescription) ProtoMessage() {}

func (x *E2SmXTddRAnfunctionDescription) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmXTddRAnfunctionDescription.ProtoReflect.Descriptor instead.
func (*E2SmXTddRAnfunctionDescription) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{32}
}

func (x *E2SmXTddRAnfunctionDescription) GetRanFunctionName() *RanfunctionName {
	if x != nil {
		return x.RanFunctionName
	}
	return nil
}

func (x *E2SmXTddRAnfunctionDescription) GetRicEventTriggerStyleList() []*RicEventTriggerStyleItem {
	if x != nil {
		return x.RicEventTriggerStyleList
	}
	return nil
}

func (x *E2SmXTddRAnfunctionDescription) GetRicReportStyleList() []*RicReportStyleItem {
	if x != nil {
		return x.RicReportStyleList
	}
	return nil
}

// range of Integer from e2sm-xtdd.asn1:180
// {RIC-Style-Type}
type RicStyleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:255,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueExt,valueLB:0,valueUB:255,"`
}

func (x *RicStyleType) Reset() {
	*x = RicStyleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicStyleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicStyleType) ProtoMessage() {}

func (x *RicStyleType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicStyleType.ProtoReflect.Descriptor instead.
func (*RicStyleType) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{33}
}

func (x *RicStyleType) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-xtdd.asn1:182
// {RIC-Style-Name}
type RicStyleName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150,"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeExt,sizeLB:1,sizeUB:150,"`
}

func (x *RicStyleName) Reset() {
	*x = RicStyleName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicStyleName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicStyleName) ProtoMessage() {}

func (x *RicStyleName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicStyleName.ProtoReflect.Descriptor instead.
func (*RicStyleName) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{34}
}

func (x *RicStyleName) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// range of Integer from e2sm-xtdd.asn1:184
// {RIC-Format-Type}
type RicFormatType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:255,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueExt,valueLB:0,valueUB:255,"`
}

func (x *RicFormatType) Reset() {
	*x = RicFormatType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicFormatType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicFormatType) ProtoMessage() {}

func (x *RicFormatType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicFormatType.ProtoReflect.Descriptor instead.
func (*RicFormatType) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{35}
}

func (x *RicFormatType) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm-xtdd.asn1:187
// @inject_tag: aper:"valueExt"
// {RIC-EventTriggerStyle-Item}
type RicEventTriggerStyleItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicEventTriggerStyleType  *RicStyleType  `protobuf:"bytes,1,opt,name=ric_event_trigger_style_type,json=ric-EventTriggerStyle-Type,proto3" json:"ric_event_trigger_style_type,omitempty"`
	RicEventTriggerStyleName  *RicStyleName  `protobuf:"bytes,2,opt,name=ric_event_trigger_style_name,json=ric-EventTriggerStyle-Name,proto3" json:"ric_event_trigger_style_name,omitempty"`
	RicEventTriggerFormatType *RicFormatType `protobuf:"bytes,3,opt,name=ric_event_trigger_format_type,json=ric-EventTriggerFormat-Type,proto3" json:"ric_event_trigger_format_type,omitempty"`
}

func (x *RicEventTriggerStyleItem) Reset() {
	*x = RicEventTriggerStyleItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicEventTriggerStyleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicEventTriggerStyleItem) ProtoMessage() {}

func (x *RicEventTriggerStyleItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicEventTriggerStyleItem.ProtoReflect.Descriptor instead.
func (*RicEventTriggerStyleItem) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{36}
}

func (x *RicEventTriggerStyleItem) GetRicEventTriggerStyleType() *RicStyleType {
	if x != nil {
		return x.RicEventTriggerStyleType
	}
	return nil
}

func (x *RicEventTriggerStyleItem) GetRicEventTriggerStyleName() *RicStyleName {
	if x != nil {
		return x.RicEventTriggerStyleName
	}
	return nil
}

func (x *RicEventTriggerStyleItem) GetRicEventTriggerFormatType() *RicFormatType {
	if x != nil {
		return x.RicEventTriggerFormatType
	}
	return nil
}

// sequence from e2sm-xtdd.asn1:194
// @inject_tag: aper:"valueExt"
// {RIC-ReportStyle-Item}
type RicReportStyleItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicReportStyleType             *RicStyleType              `protobuf:"bytes,1,opt,name=ric_report_style_type,json=ric-ReportStyle-Type,proto3" json:"ric_report_style_type,omitempty"`
	RicReportStyleName             *RicStyleName              `protobuf:"bytes,2,opt,name=ric_report_style_name,json=ric-ReportStyle-Name,proto3" json:"ric_report_style_name,omitempty"`
	RicActionFormatType            *RicFormatType             `protobuf:"bytes,3,opt,name=ric_action_format_type,json=ric-ActionFormat-Type,proto3" json:"ric_action_format_type,omitempty"`
	MeasInfoActionList             *MeasurementInfoActionList `protobuf:"bytes,4,opt,name=meas_info_action_list,json=measInfo-Action-List,proto3" json:"meas_info_action_list,omitempty"`
	RicIndicationHeaderFormatType  *RicFormatType             `protobuf:"bytes,5,opt,name=ric_indication_header_format_type,json=ric-IndicationHeaderFormat-Type,proto3" json:"ric_indication_header_format_type,omitempty"`
	RicIndicationMessageFormatType *RicFormatType             `protobuf:"bytes,6,opt,name=ric_indication_message_format_type,json=ric-IndicationMessageFormat-Type,proto3" json:"ric_indication_message_format_type,omitempty"`
}

func (x *RicReportStyleItem) Reset() {
	*x = RicReportStyleItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicReportStyleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicReportStyleItem) ProtoMessage() {}

func (x *RicReportStyleItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicReportStyleItem.ProtoReflect.Descriptor instead.
func (*RicReportStyleItem) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{37}
}

func (x *RicReportStyleItem) GetRicReportStyleType() *RicStyleType {
	if x != nil {
		return x.RicReportStyleType
	}
	return nil
}

func (x *RicReportStyleItem) GetRicReportStyleName() *RicStyleName {
	if x != nil {
		return x.RicReportStyleName
	}
	return nil
}

func (x *RicReportStyleItem) GetRicActionFormatType() *RicFormatType {
	if x != nil {
		return x.RicActionFormatType
	}
	return nil
}

func (x *RicReportStyleItem) GetMeasInfoActionList() *MeasurementInfoActionList {
	if x != nil {
		return x.MeasInfoActionList
	}
	return nil
}

func (x *RicReportStyleItem) GetRicIndicationHeaderFormatType() *RicFormatType {
	if x != nil {
		return x.RicIndicationHeaderFormatType
	}
	return nil
}

func (x *RicReportStyleItem) GetRicIndicationMessageFormatType() *RicFormatType {
	if x != nil {
		return x.RicIndicationMessageFormatType
	}
	return nil
}

// sequence from e2sm-xtdd.asn1:210
// @inject_tag: aper:"choiceExt"
// {E2SM-XTDD-ControlHeader}
type E2SmXTddControlHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-xtdd.asn1:210
	//
	// Types that are assignable to E2SmXtddControlHeader:
	//	*E2SmXTddControlHeader_ControlHeaderFormat1
	E2SmXtddControlHeader isE2SmXTddControlHeader_E2SmXtddControlHeader `protobuf_oneof:"e2_sm_xtdd_control_header"`
}

func (x *E2SmXTddControlHeader) Reset() {
	*x = E2SmXTddControlHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmXTddControlHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmXTddControlHeader) ProtoMessage() {}

func (x *E2SmXTddControlHeader) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmXTddControlHeader.ProtoReflect.Descriptor instead.
func (*E2SmXTddControlHeader) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{38}
}

func (m *E2SmXTddControlHeader) GetE2SmXtddControlHeader() isE2SmXTddControlHeader_E2SmXtddControlHeader {
	if m != nil {
		return m.E2SmXtddControlHeader
	}
	return nil
}

func (x *E2SmXTddControlHeader) GetControlHeaderFormat1() *E2SmXTddControlHeaderFormat1 {
	if x, ok := x.GetE2SmXtddControlHeader().(*E2SmXTddControlHeader_ControlHeaderFormat1); ok {
		return x.ControlHeaderFormat1
	}
	return nil
}

type isE2SmXTddControlHeader_E2SmXtddControlHeader interface {
	isE2SmXTddControlHeader_E2SmXtddControlHeader()
}

type E2SmXTddControlHeader_ControlHeaderFormat1 struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	ControlHeaderFormat1 *E2SmXTddControlHeaderFormat1 `protobuf:"bytes,1,opt,name=control_header_format1,json=controlHeader-Format1,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

func (*E2SmXTddControlHeader_ControlHeaderFormat1) isE2SmXTddControlHeader_E2SmXtddControlHeader() {}

// sequence from e2sm-xtdd.asn1:216
// @inject_tag: aper:"valueExt"
// {E2SM-XTDD-ControlHeader-Format1}
type E2SmXTddControlHeaderFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:0,"
	RcCommand XtddCommand `protobuf:"varint,1,opt,name=rc_command,json=rc-command,proto3,enum=e2sm_xtdd.v1.XtddCommand" json:"rc_command,omitempty" aper:"valueExt,valueLB:0,valueUB:0,"`
}

func (x *E2SmXTddControlHeaderFormat1) Reset() {
	*x = E2SmXTddControlHeaderFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmXTddControlHeaderFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmXTddControlHeaderFormat1) ProtoMessage() {}

func (x *E2SmXTddControlHeaderFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmXTddControlHeaderFormat1.ProtoReflect.Descriptor instead.
func (*E2SmXTddControlHeaderFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{39}
}

func (x *E2SmXTddControlHeaderFormat1) GetRcCommand() XtddCommand {
	if x != nil {
		return x.RcCommand
	}
	return XtddCommand_XTDD_COMMAND_CONTROL1
}

// sequence from e2sm-xtdd.asn1:230
// @inject_tag: aper:"choiceExt"
// {E2SM-XTDD-ControlMessage}
type E2SmXTddControlMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-xtdd.asn1:230
	//
	// Types that are assignable to E2SmXtddControlMessage:
	//	*E2SmXTddControlMessage_ControlMessageFormat1
	E2SmXtddControlMessage isE2SmXTddControlMessage_E2SmXtddControlMessage `protobuf_oneof:"e2_sm_xtdd_control_message"`
}

func (x *E2SmXTddControlMessage) Reset() {
	*x = E2SmXTddControlMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmXTddControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmXTddControlMessage) ProtoMessage() {}

func (x *E2SmXTddControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmXTddControlMessage.ProtoReflect.Descriptor instead.
func (*E2SmXTddControlMessage) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{40}
}

func (m *E2SmXTddControlMessage) GetE2SmXtddControlMessage() isE2SmXTddControlMessage_E2SmXtddControlMessage {
	if m != nil {
		return m.E2SmXtddControlMessage
	}
	return nil
}

func (x *E2SmXTddControlMessage) GetControlMessageFormat1() *E2SmXTddControlMessageFormat1 {
	if x, ok := x.GetE2SmXtddControlMessage().(*E2SmXTddControlMessage_ControlMessageFormat1); ok {
		return x.ControlMessageFormat1
	}
	return nil
}

type isE2SmXTddControlMessage_E2SmXtddControlMessage interface {
	isE2SmXTddControlMessage_E2SmXtddControlMessage()
}

type E2SmXTddControlMessage_ControlMessageFormat1 struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	ControlMessageFormat1 *E2SmXTddControlMessageFormat1 `protobuf:"bytes,1,opt,name=control_message_format1,json=controlMessage-Format1,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

func (*E2SmXTddControlMessage_ControlMessageFormat1) isE2SmXTddControlMessage_E2SmXtddControlMessage() {
}

// range of Integer from e2sm-xtdd.asn1:234
// {ControlElement}
type ControlElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:150,"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:150,"`
}

func (x *ControlElement) Reset() {
	*x = ControlElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlElement) ProtoMessage() {}

func (x *ControlElement) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlElement.ProtoReflect.Descriptor instead.
func (*ControlElement) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{41}
}

func (x *ControlElement) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// sequence from e2sm-xtdd.asn1:238
// @inject_tag: aper:"valueExt"
// {E2SM-XTDD-ControlMessage-Format1}
type E2SmXTddControlMessageFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ce1 *ControlElement `protobuf:"bytes,1,opt,name=ce1,proto3" json:"ce1,omitempty"`
	Ce2 *ControlElement `protobuf:"bytes,2,opt,name=ce2,proto3" json:"ce2,omitempty"`
}

func (x *E2SmXTddControlMessageFormat1) Reset() {
	*x = E2SmXTddControlMessageFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmXTddControlMessageFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmXTddControlMessageFormat1) ProtoMessage() {}

func (x *E2SmXTddControlMessageFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmXTddControlMessageFormat1.ProtoReflect.Descriptor instead.
func (*E2SmXTddControlMessageFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP(), []int{42}
}

func (x *E2SmXTddControlMessageFormat1) GetCe1() *ControlElement {
	if x != nil {
		return x.Ce1
	}
	return nil
}

func (x *E2SmXTddControlMessageFormat1) GetCe2() *ControlElement {
	if x != nil {
		return x.Ce2
	}
	return nil
}

var File_e2sm_xtdd_v1_e2sm_xtdd_proto protoreflect.FileDescriptor

var file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61, 0x73, 0x6e, 0x31, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x7a, 0x04, 0x10,
	0x04, 0x18, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0c, 0x43, 0x65,
	0x6c, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05,
	0x18, 0xff, 0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x11,
	0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x28, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff,
	0xff, 0xff, 0xff, 0x0f, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a,
	0x10, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x58, 0x74, 0x64, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x44, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x28, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x0f, 0x52, 0x61, 0x6e, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x17, 0x72, 0x61,
	0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x15, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40,
	0x0a, 0x16, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65,
	0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x52, 0x14, 0x72, 0x61, 0x6e, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4f, 0x49, 0x44,
	0x12, 0x45, 0x0a, 0x18, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x17,
	0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x07, 0x4d, 0x61, 0x78, 0x6f, 0x66,
	0x55, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0xff, 0xff, 0x03, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x2b, 0x0a, 0x04, 0x55, 0x65, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22,
	0x08, 0x18, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x29, 0x0a, 0x05, 0x55, 0x65, 0x74, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0x96, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6d, 0x0a, 0x06, 0x55,
	0x65, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x27, 0x0a, 0x05, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x52, 0x04, 0x75, 0x65, 0x49, 0x44, 0x12, 0x2f,
	0x0a, 0x06, 0x75, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65,
	0x74, 0x61, 0x67, 0x48, 0x00, 0x52, 0x05, 0x75, 0x65, 0x54, 0x61, 0x67, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x75, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x22, 0x4e, 0x0a, 0x13, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x13, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x0f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc4, 0x01,
	0x0a, 0x11, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x52, 0x04, 0x75, 0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x06,
	0x75, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x74, 0x61,
	0x67, 0x52, 0x05, 0x75, 0x65, 0x54, 0x61, 0x67, 0x12, 0x5a, 0x0a, 0x15, 0x6d, 0x65, 0x61, 0x73,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78,
	0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x12, 0x6d, 0x65, 0x61, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x19, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x15,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5a, 0x0a, 0x19, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x19, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x3e, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x61, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x65, 0x61, 0x73, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x13,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x11, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06,
	0x18, 0xff, 0xff, 0x03, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe8, 0x01,
	0x0a, 0x34, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x18, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52,
	0x17, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x3e, 0x0a, 0x3c, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x73, 0x5f, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x1e, 0x45, 0x32, 0x53,
	0x6d, 0x58, 0x54, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7d, 0x0a, 0x18, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x73, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x17, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x22, 0x52, 0x0a, 0x25, 0x45, 0x32,
	0x53, 0x6d, 0x58, 0x54, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x31, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0xd9,
	0x01, 0x0a, 0x2f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54,
	0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x6c, 0x0a, 0x19, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x18, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31,
	0x42, 0x38, 0x0a, 0x36, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x5f, 0x65, 0x32,
	0x5f, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xda, 0x01, 0x0a, 0x18, 0x45,
	0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0e, 0x72, 0x69, 0x63, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x72, 0x69, 0x63,
	0x2d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x7a, 0x0a, 0x19, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x73, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x18, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2d,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x22, 0xad, 0x02, 0x0a, 0x1f, 0x45, 0x32, 0x53, 0x6d,
	0x58, 0x54, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x3a, 0x0a, 0x0b, 0x63,
	0x65, 0x6c, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x65, 0x6c, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x09, 0x63, 0x65,
	0x6c, 0x6c, 0x4f, 0x62, 0x6a, 0x49, 0x44, 0x12, 0x47, 0x0a, 0x0e, 0x6d, 0x65, 0x61, 0x73, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x44, 0x0a, 0x0d, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78,
	0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0c, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x44, 0x22, 0xd9, 0x01, 0x0a, 0x2f, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x73, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x6c, 0x0a, 0x19, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32,
	0x53, 0x6d, 0x58, 0x54, 0x64, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52,
	0x18, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x38, 0x0a, 0x36, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x5f, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64,
	0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x22, 0x96, 0x01, 0x0a, 0x18, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x7a, 0x0a, 0x19, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54,
	0x64, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x18, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x2d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x22, 0x9f, 0x03, 0x0a,
	0x1f, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31,
	0x12, 0x43, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d,
	0x0a, 0x12, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x10, 0x00, 0x18, 0x0f, 0x48, 0x00, 0x52, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a,
	0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x00, 0x18, 0x90, 0x03, 0x48, 0x01,
	0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x45, 0x0a, 0x0c, 0x78, 0x74, 0x64, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x58, 0x74, 0x64, 0x64, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x44, 0x48, 0x02, 0x52, 0x0a, 0x78, 0x74, 0x64, 0x64, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x22, 0xe0,
	0x01, 0x0a, 0x31, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x45, 0x32, 0x53, 0x6d, 0x58,
	0x54, 0x64, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x6f, 0x0a, 0x1a, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x19, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2d, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x3a, 0x0a, 0x38, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x73, 0x5f, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x9b, 0x01, 0x0a, 0x19, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x7e, 0x0a, 0x1a, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x45, 0x32, 0x53, 0x6d, 0x58,
	0x54, 0x64, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x19, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x22,
	0xae, 0x03, 0x0a, 0x20, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x31, 0x12, 0x3f, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x49, 0x44, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6f, 0x62,
	0x6a, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52, 0x09, 0x63, 0x65, 0x6c, 0x6c, 0x4f, 0x62,
	0x6a, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x0d, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c,
	0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61,
	0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x48, 0x01,
	0x52, 0x0c, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x4c, 0x0a, 0x0e, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x02, 0x52, 0x0c,
	0x6d, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x3a, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x61, 0x73, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xc7, 0x02, 0x0a, 0x1e, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64, 0x52, 0x41, 0x6e,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x11, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61,
	0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x10, 0x72,
	0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x75, 0x0a, 0x1c, 0x72, 0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0b, 0xfa,
	0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0xff, 0x01, 0x52, 0x1a, 0x72, 0x69, 0x63, 0x2d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08,
	0x01, 0x10, 0xff, 0x01, 0x52, 0x14, 0x72, 0x69, 0x63, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x0c, 0x52, 0x69,
	0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05,
	0x18, 0xff, 0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0c,
	0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31,
	0x0a, 0x0d, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xb7, 0x02, 0x0a, 0x18, 0x52, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x5c,
	0x0a, 0x1c, 0x72, 0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x1a, 0x72, 0x69, 0x63, 0x2d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5c, 0x0a, 0x1c,
	0x72, 0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x1a,
	0x72, 0x69, 0x63, 0x2d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x1d, 0x72, 0x69,
	0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1b,
	0x72, 0x69, 0x63, 0x2d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbc, 0x04, 0x0a, 0x12,
	0x52, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x4f, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x14, 0x72,
	0x69, 0x63, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x4f, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x14,
	0x72, 0x69, 0x63, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x16, 0x72, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x15, 0x72, 0x69, 0x63, 0x2d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x6d, 0x65, 0x61, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78,
	0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x14, 0x6d, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x2d, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x21, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1f,
	0x72, 0x69, 0x63, 0x2d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x69, 0x0a, 0x22, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x20, 0x72, 0x69, 0x63, 0x2d, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x15, 0x45,
	0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x63, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31,
	0x48, 0x00, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x1b, 0x0a, 0x19, 0x65, 0x32, 0x5f,
	0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x59, 0x0a, 0x1c, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54,
	0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x39, 0x0a, 0x0a, 0x72, 0x63, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x58, 0x74, 0x64, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x0a, 0x72, 0x63, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x22, 0x9e, 0x01, 0x0a, 0x16, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54, 0x64, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x66, 0x0a, 0x17,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53,
	0x6d, 0x58, 0x54, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x16, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2d, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x31, 0x42, 0x1c, 0x0a, 0x1a, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x78, 0x74,
	0x64, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x32, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7f, 0x0a, 0x1d, 0x45, 0x32, 0x53, 0x6d, 0x58, 0x54,
	0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x2e, 0x0a, 0x03, 0x63, 0x65, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x03, 0x63, 0x65, 0x31, 0x12, 0x2e, 0x0a, 0x03, 0x63, 0x65, 0x32, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x03, 0x63, 0x65, 0x32, 0x2a, 0x28, 0x0a, 0x0b, 0x58, 0x74, 0x64, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x15, 0x58, 0x54, 0x44, 0x44, 0x5f, 0x43,
	0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x31, 0x10,
	0x00, 0x42, 0x4a, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x41, 0x62, 0x64, 0x6f, 0x75, 0x54, 0x6c, 0x69, 0x6c, 0x69, 0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x2d,
	0x65, 0x32, 0x2d, 0x73, 0x6d, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x78, 0x74, 0x64, 0x64, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x32, 0x73, 0x6d, 0x2d, 0x78, 0x74, 0x64, 0x64, 0x2d, 0x67, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescOnce sync.Once
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescData = file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDesc
)

func file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescGZIP() []byte {
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescOnce.Do(func() {
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescData = protoimpl.X.CompressGZIP(file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescData)
	})
	return file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDescData
}

var file_e2sm_xtdd_v1_e2sm_xtdd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_e2sm_xtdd_v1_e2sm_xtdd_proto_goTypes = []interface{}{
	(XtddCommand)(0),                  // 0: e2sm_xtdd.v1.XtddCommand
	(*TimeStamp)(nil),                 // 1: e2sm_xtdd.v1.TimeStamp
	(*CellObjectId)(nil),              // 2: e2sm_xtdd.v1.CellObjectId
	(*GranularityPeriod)(nil),         // 3: e2sm_xtdd.v1.GranularityPeriod
	(*SubscriptionId)(nil),            // 4: e2sm_xtdd.v1.SubscriptionId
	(*GlobalXtddnodeID)(nil),          // 5: e2sm_xtdd.v1.GlobalXtddnodeID
	(*RanfunctionName)(nil),           // 6: e2sm_xtdd.v1.RanfunctionName
	(*MaxofUe)(nil),                   // 7: e2sm_xtdd.v1.MaxofUe
	(*Ueid)(nil),                      // 8: e2sm_xtdd.v1.Ueid
	(*Uetag)(nil),                     // 9: e2sm_xtdd.v1.Uetag
	(*Ueitem)(nil),                    // 10: e2sm_xtdd.v1.Ueitem
	(*MeasurementInfoList)(nil),       // 11: e2sm_xtdd.v1.MeasurementInfoList
	(*MeasurementInfoItem)(nil),       // 12: e2sm_xtdd.v1.MeasurementInfoItem
	(*MeasurementData)(nil),           // 13: e2sm_xtdd.v1.MeasurementData
	(*MeasurementRecord)(nil),         // 14: e2sm_xtdd.v1.MeasurementRecord
	(*MeasurementRecordItemList)(nil), // 15: e2sm_xtdd.v1.MeasurementRecordItemList
	(*MeasurementRecordItem)(nil),     // 16: e2sm_xtdd.v1.MeasurementRecordItem
	(*MeasurementInfoActionList)(nil), // 17: e2sm_xtdd.v1.MeasurementInfoActionList
	(*MeasurementInfoActionItem)(nil), // 18: e2sm_xtdd.v1.MeasurementInfoActionItem
	(*MeasurementTypeName)(nil),       // 19: e2sm_xtdd.v1.MeasurementTypeName
	(*MeasurementTypeId)(nil),         // 20: e2sm_xtdd.v1.MeasurementTypeId
	(*EventDefinitionformatsE2SmXTddEventTriggerDefinition)(nil), // 21: e2sm_xtdd.v1.EventDefinitionformatsE2SmXTddEventTriggerDefinition
	(*E2SmXTddEventTriggerDefinition)(nil),                       // 22: e2sm_xtdd.v1.E2SmXTddEventTriggerDefinition
	(*E2SmXTddEventTriggerDefinitionFormat1)(nil),                // 23: e2sm_xtdd.v1.E2SmXTddEventTriggerDefinitionFormat1
	(*ActionDefinitionformatsE2SmXTddActionDefinition)(nil),      // 24: e2sm_xtdd.v1.ActionDefinitionformatsE2SmXTddActionDefinition
	(*E2SmXTddActionDefinition)(nil),                             // 25: e2sm_xtdd.v1.E2SmXTddActionDefinition
	(*E2SmXTddActionDefinitionFormat1)(nil),                      // 26: e2sm_xtdd.v1.E2SmXTddActionDefinitionFormat1
	(*IndicationHeaderformatsE2SmXTddIndicationHeader)(nil),      // 27: e2sm_xtdd.v1.IndicationHeaderformatsE2SmXTddIndicationHeader
	(*E2SmXTddIndicationHeader)(nil),                             // 28: e2sm_xtdd.v1.E2SmXTddIndicationHeader
	(*E2SmXTddIndicationHeaderFormat1)(nil),                      // 29: e2sm_xtdd.v1.E2SmXTddIndicationHeaderFormat1
	(*IndicationMessageformatsE2SmXTddIndicationMessage)(nil),    // 30: e2sm_xtdd.v1.IndicationMessageformatsE2SmXTddIndicationMessage
	(*E2SmXTddIndicationMessage)(nil),                            // 31: e2sm_xtdd.v1.E2SmXTddIndicationMessage
	(*E2SmXTddIndicationMessageFormat1)(nil),                     // 32: e2sm_xtdd.v1.E2SmXTddIndicationMessageFormat1
	(*E2SmXTddRAnfunctionDescription)(nil),                       // 33: e2sm_xtdd.v1.E2SmXTddRAnfunctionDescription
	(*RicStyleType)(nil),                                         // 34: e2sm_xtdd.v1.RicStyleType
	(*RicStyleName)(nil),                                         // 35: e2sm_xtdd.v1.RicStyleName
	(*RicFormatType)(nil),                                        // 36: e2sm_xtdd.v1.RicFormatType
	(*RicEventTriggerStyleItem)(nil),                             // 37: e2sm_xtdd.v1.RicEventTriggerStyleItem
	(*RicReportStyleItem)(nil),                                   // 38: e2sm_xtdd.v1.RicReportStyleItem
	(*E2SmXTddControlHeader)(nil),                                // 39: e2sm_xtdd.v1.E2SmXTddControlHeader
	(*E2SmXTddControlHeaderFormat1)(nil),                         // 40: e2sm_xtdd.v1.E2SmXTddControlHeaderFormat1
	(*E2SmXTddControlMessage)(nil),                               // 41: e2sm_xtdd.v1.E2SmXTddControlMessage
	(*ControlElement)(nil),                                       // 42: e2sm_xtdd.v1.ControlElement
	(*E2SmXTddControlMessageFormat1)(nil),                        // 43: e2sm_xtdd.v1.E2SmXTddControlMessageFormat1
}
var file_e2sm_xtdd_v1_e2sm_xtdd_proto_depIdxs = []int32{
	8,  // 0: e2sm_xtdd.v1.Ueitem.ue_id:type_name -> e2sm_xtdd.v1.Ueid
	9,  // 1: e2sm_xtdd.v1.Ueitem.ue_tag:type_name -> e2sm_xtdd.v1.Uetag
	12, // 2: e2sm_xtdd.v1.MeasurementInfoList.value:type_name -> e2sm_xtdd.v1.MeasurementInfoItem
	14, // 3: e2sm_xtdd.v1.MeasurementData.value:type_name -> e2sm_xtdd.v1.MeasurementRecord
	8,  // 4: e2sm_xtdd.v1.MeasurementRecord.ue_id:type_name -> e2sm_xtdd.v1.Ueid
	9,  // 5: e2sm_xtdd.v1.MeasurementRecord.ue_tag:type_name -> e2sm_xtdd.v1.Uetag
	15, // 6: e2sm_xtdd.v1.MeasurementRecord.meas_record_item_list:type_name -> e2sm_xtdd.v1.MeasurementRecordItemList
	16, // 7: e2sm_xtdd.v1.MeasurementRecordItemList.value:type_name -> e2sm_xtdd.v1.MeasurementRecordItem
	18, // 8: e2sm_xtdd.v1.MeasurementInfoActionList.value:type_name -> e2sm_xtdd.v1.MeasurementInfoActionItem
	19, // 9: e2sm_xtdd.v1.MeasurementInfoActionItem.meas_name:type_name -> e2sm_xtdd.v1.MeasurementTypeName
	20, // 10: e2sm_xtdd.v1.MeasurementInfoActionItem.meas_id:type_name -> e2sm_xtdd.v1.MeasurementTypeId
	23, // 11: e2sm_xtdd.v1.EventDefinitionformatsE2SmXTddEventTriggerDefinition.event_definition_format1:type_name -> e2sm_xtdd.v1.E2SmXTddEventTriggerDefinitionFormat1
	21, // 12: e2sm_xtdd.v1.E2SmXTddEventTriggerDefinition.event_definition_formats:type_name -> e2sm_xtdd.v1.EventDefinitionformatsE2SmXTddEventTriggerDefinition
	26, // 13: e2sm_xtdd.v1.ActionDefinitionformatsE2SmXTddActionDefinition.action_definition_format1:type_name -> e2sm_xtdd.v1.E2SmXTddActionDefinitionFormat1
	34, // 14: e2sm_xtdd.v1.E2SmXTddActionDefinition.ric_style_type:type_name -> e2sm_xtdd.v1.RicStyleType
	24, // 15: e2sm_xtdd.v1.E2SmXTddActionDefinition.action_definition_formats:type_name -> e2sm_xtdd.v1.ActionDefinitionformatsE2SmXTddActionDefinition
	2,  // 16: e2sm_xtdd.v1.E2SmXTddActionDefinitionFormat1.cell_obj_id:type_name -> e2sm_xtdd.v1.CellObjectId
	11, // 17: e2sm_xtdd.v1.E2SmXTddActionDefinitionFormat1.meas_info_list:type_name -> e2sm_xtdd.v1.MeasurementInfoList
	3,  // 18: e2sm_xtdd.v1.E2SmXTddActionDefinitionFormat1.granul_period:type_name -> e2sm_xtdd.v1.GranularityPeriod
	4,  // 19: e2sm_xtdd.v1.E2SmXTddActionDefinitionFormat1.subscript_id:type_name -> e2sm_xtdd.v1.SubscriptionId
	29, // 20: e2sm_xtdd.v1.IndicationHeaderformatsE2SmXTddIndicationHeader.indication_header_format1:type_name -> e2sm_xtdd.v1.E2SmXTddIndicationHeaderFormat1
	27, // 21: e2sm_xtdd.v1.E2SmXTddIndicationHeader.indication_header_formats:type_name -> e2sm_xtdd.v1.IndicationHeaderformatsE2SmXTddIndicationHeader
	1,  // 22: e2sm_xtdd.v1.E2SmXTddIndicationHeaderFormat1.collet_start_time:type_name -> e2sm_xtdd.v1.TimeStamp
	11, // 23: e2sm_xtdd.v1.E2SmXTddIndicationHeaderFormat1.meas_info_list:type_name -> e2sm_xtdd.v1.MeasurementInfoList
	5,  // 24: e2sm_xtdd.v1.E2SmXTddIndicationHeaderFormat1.xtdd_node_id:type_name -> e2sm_xtdd.v1.GlobalXtddnodeID
	32, // 25: e2sm_xtdd.v1.IndicationMessageformatsE2SmXTddIndicationMessage.indication_message_format1:type_name -> e2sm_xtdd.v1.E2SmXTddIndicationMessageFormat1
	30, // 26: e2sm_xtdd.v1.E2SmXTddIndicationMessage.indication_message_formats:type_name -> e2sm_xtdd.v1.IndicationMessageformatsE2SmXTddIndicationMessage
	4,  // 27: e2sm_xtdd.v1.E2SmXTddIndicationMessageFormat1.subscript_id:type_name -> e2sm_xtdd.v1.SubscriptionId
	2,  // 28: e2sm_xtdd.v1.E2SmXTddIndicationMessageFormat1.cell_obj_id:type_name -> e2sm_xtdd.v1.CellObjectId
	3,  // 29: e2sm_xtdd.v1.E2SmXTddIndicationMessageFormat1.granul_period:type_name -> e2sm_xtdd.v1.GranularityPeriod
	11, // 30: e2sm_xtdd.v1.E2SmXTddIndicationMessageFormat1.meas_info_list:type_name -> e2sm_xtdd.v1.MeasurementInfoList
	13, // 31: e2sm_xtdd.v1.E2SmXTddIndicationMessageFormat1.meas_data:type_name -> e2sm_xtdd.v1.MeasurementData
	6,  // 32: e2sm_xtdd.v1.E2SmXTddRAnfunctionDescription.ran_function_name:type_name -> e2sm_xtdd.v1.RanfunctionName
	37, // 33: e2sm_xtdd.v1.E2SmXTddRAnfunctionDescription.ric_event_trigger_style_list:type_name -> e2sm_xtdd.v1.RicEventTriggerStyleItem
	38, // 34: e2sm_xtdd.v1.E2SmXTddRAnfunctionDescription.ric_report_style_list:type_name -> e2sm_xtdd.v1.RicReportStyleItem
	34, // 35: e2sm_xtdd.v1.RicEventTriggerStyleItem.ric_event_trigger_style_type:type_name -> e2sm_xtdd.v1.RicStyleType
	35, // 36: e2sm_xtdd.v1.RicEventTriggerStyleItem.ric_event_trigger_style_name:type_name -> e2sm_xtdd.v1.RicStyleName
	36, // 37: e2sm_xtdd.v1.RicEventTriggerStyleItem.ric_event_trigger_format_type:type_name -> e2sm_xtdd.v1.RicFormatType
	34, // 38: e2sm_xtdd.v1.RicReportStyleItem.ric_report_style_type:type_name -> e2sm_xtdd.v1.RicStyleType
	35, // 39: e2sm_xtdd.v1.RicReportStyleItem.ric_report_style_name:type_name -> e2sm_xtdd.v1.RicStyleName
	36, // 40: e2sm_xtdd.v1.RicReportStyleItem.ric_action_format_type:type_name -> e2sm_xtdd.v1.RicFormatType
	17, // 41: e2sm_xtdd.v1.RicReportStyleItem.meas_info_action_list:type_name -> e2sm_xtdd.v1.MeasurementInfoActionList
	36, // 42: e2sm_xtdd.v1.RicReportStyleItem.ric_indication_header_format_type:type_name -> e2sm_xtdd.v1.RicFormatType
	36, // 43: e2sm_xtdd.v1.RicReportStyleItem.ric_indication_message_format_type:type_name -> e2sm_xtdd.v1.RicFormatType
	40, // 44: e2sm_xtdd.v1.E2SmXTddControlHeader.control_header_format1:type_name -> e2sm_xtdd.v1.E2SmXTddControlHeaderFormat1
	0,  // 45: e2sm_xtdd.v1.E2SmXTddControlHeaderFormat1.rc_command:type_name -> e2sm_xtdd.v1.XtddCommand
	43, // 46: e2sm_xtdd.v1.E2SmXTddControlMessage.control_message_format1:type_name -> e2sm_xtdd.v1.E2SmXTddControlMessageFormat1
	42, // 47: e2sm_xtdd.v1.E2SmXTddControlMessageFormat1.ce1:type_name -> e2sm_xtdd.v1.ControlElement
	42, // 48: e2sm_xtdd.v1.E2SmXTddControlMessageFormat1.ce2:type_name -> e2sm_xtdd.v1.ControlElement
	49, // [49:49] is the sub-list for method output_type
	49, // [49:49] is the sub-list for method input_type
	49, // [49:49] is the sub-list for extension type_name
	49, // [49:49] is the sub-list for extension extendee
	0,  // [0:49] is the sub-list for field type_name
}

func init() { file_e2sm_xtdd_v1_e2sm_xtdd_proto_init() }
func file_e2sm_xtdd_v1_e2sm_xtdd_proto_init() {
	if File_e2sm_xtdd_v1_e2sm_xtdd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeStamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellObjectId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GranularityPeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalXtddnodeID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxofUe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ueid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uetag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ueitem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementInfoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementRecordItemList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementRecordItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementInfoActionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementInfoActionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementTypeName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementTypeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDefinitionformatsE2SmXTddEventTriggerDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmXTddEventTriggerDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmXTddEventTriggerDefinitionFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionDefinitionformatsE2SmXTddActionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmXTddActionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmXTddActionDefinitionFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndicationHeaderformatsE2SmXTddIndicationHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmXTddIndicationHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmXTddIndicationHeaderFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndicationMessageformatsE2SmXTddIndicationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmXTddIndicationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmXTddIndicationMessageFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmXTddRAnfunctionDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicStyleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicStyleName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicFormatType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicEventTriggerStyleItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicReportStyleItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmXTddControlHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmXTddControlHeaderFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmXTddControlMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmXTddControlMessageFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*EventDefinitionformatsE2SmXTddEventTriggerDefinition_EventDefinitionFormat1)(nil),
	}
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*ActionDefinitionformatsE2SmXTddActionDefinition_ActionDefinitionFormat1)(nil),
	}
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*IndicationHeaderformatsE2SmXTddIndicationHeader_IndicationHeaderFormat1)(nil),
	}
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*IndicationMessageformatsE2SmXTddIndicationMessage_IndicationMessageFormat1)(nil),
	}
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[31].OneofWrappers = []interface{}{}
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*E2SmXTddControlHeader_ControlHeaderFormat1)(nil),
	}
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes[40].OneofWrappers = []interface{}{
		(*E2SmXTddControlMessage_ControlMessageFormat1)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_e2sm_xtdd_v1_e2sm_xtdd_proto_goTypes,
		DependencyIndexes: file_e2sm_xtdd_v1_e2sm_xtdd_proto_depIdxs,
		EnumInfos:         file_e2sm_xtdd_v1_e2sm_xtdd_proto_enumTypes,
		MessageInfos:      file_e2sm_xtdd_v1_e2sm_xtdd_proto_msgTypes,
	}.Build()
	File_e2sm_xtdd_v1_e2sm_xtdd_proto = out.File
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_rawDesc = nil
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_goTypes = nil
	file_e2sm_xtdd_v1_e2sm_xtdd_proto_depIdxs = nil
}
