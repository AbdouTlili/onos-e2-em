////////////////////// e2sm-rmet-ies.proto //////////////////////
// Protobuf generated from /e2sm-rmet.asn1 by asn1c-0.9.29
// E2SM-RMET-IEs { iso(1) identified-organization(3) dod(6) internet(1) private(4) enterprise(1) oran(53148) e2(1) version2(2) e2sm(2) e2sm-RMETMON-IEs(2) }

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.19.4
// source: e2sm_rmet/v1/e2sm_rmet.proto

package e2sm_rmet_go

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	asn1 "github.com/onosproject/onos-lib-go/api/asn1/v1/asn1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// sequence from e2sm-rmet.asn1:24
// {EUTRACGI}
type Eutracgi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity      *PlmnIdentity      `protobuf:"bytes,1,opt,name=p_lmn_identity,json=pLMN-Identity,proto3" json:"p_lmn_identity,omitempty"`
	EUtracellIdentity *EutracellIdentity `protobuf:"bytes,2,opt,name=e_utracell_identity,json=eUTRACellIdentity,proto3" json:"e_utracell_identity,omitempty"`
}

func (x *Eutracgi) Reset() {
	*x = Eutracgi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Eutracgi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Eutracgi) ProtoMessage() {}

func (x *Eutracgi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Eutracgi.ProtoReflect.Descriptor instead.
func (*Eutracgi) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{0}
}

func (x *Eutracgi) GetPLmnIdentity() *PlmnIdentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *Eutracgi) GetEUtracellIdentity() *EutracellIdentity {
	if x != nil {
		return x.EUtracellIdentity
	}
	return nil
}

// sequence from e2sm-rmet.asn1:30
// {NRCGI}
type Nrcgi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity   *PlmnIdentity   `protobuf:"bytes,1,opt,name=p_lmn_identity,json=pLMN-Identity,proto3" json:"p_lmn_identity,omitempty"`
	NRcellIdentity *NrcellIdentity `protobuf:"bytes,2,opt,name=n_rcell_identity,json=nRCellIdentity,proto3" json:"n_rcell_identity,omitempty"`
}

func (x *Nrcgi) Reset() {
	*x = Nrcgi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nrcgi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nrcgi) ProtoMessage() {}

func (x *Nrcgi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nrcgi.ProtoReflect.Descriptor instead.
func (*Nrcgi) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{1}
}

func (x *Nrcgi) GetPLmnIdentity() *PlmnIdentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *Nrcgi) GetNRcellIdentity() *NrcellIdentity {
	if x != nil {
		return x.NRcellIdentity
	}
	return nil
}

// sequence from e2sm-rmet.asn1:36
// {CellGlobalID}
type CellGlobalId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-rmet.asn1:36
	//
	// Types that are assignable to CellGlobalId:
	//	*CellGlobalId_NrCgi
	//	*CellGlobalId_EUtraCgi
	CellGlobalId isCellGlobalId_CellGlobalId `protobuf_oneof:"cell_global_id"`
}

func (x *CellGlobalId) Reset() {
	*x = CellGlobalId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellGlobalId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellGlobalId) ProtoMessage() {}

func (x *CellGlobalId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellGlobalId.ProtoReflect.Descriptor instead.
func (*CellGlobalId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{2}
}

func (m *CellGlobalId) GetCellGlobalId() isCellGlobalId_CellGlobalId {
	if m != nil {
		return m.CellGlobalId
	}
	return nil
}

func (x *CellGlobalId) GetNrCgi() *Nrcgi {
	if x, ok := x.GetCellGlobalId().(*CellGlobalId_NrCgi); ok {
		return x.NrCgi
	}
	return nil
}

func (x *CellGlobalId) GetEUtraCgi() *Eutracgi {
	if x, ok := x.GetCellGlobalId().(*CellGlobalId_EUtraCgi); ok {
		return x.EUtraCgi
	}
	return nil
}

type isCellGlobalId_CellGlobalId interface {
	isCellGlobalId_CellGlobalId()
}

type CellGlobalId_NrCgi struct {
	NrCgi *Nrcgi `protobuf:"bytes,1,opt,name=nr_cgi,json=nr-CGI,proto3,oneof"`
}

type CellGlobalId_EUtraCgi struct {
	EUtraCgi *Eutracgi `protobuf:"bytes,2,opt,name=e_utra_cgi,json=eUTRA-CGI,proto3,oneof"`
}

func (*CellGlobalId_NrCgi) isCellGlobalId_CellGlobalId() {}

func (*CellGlobalId_EUtraCgi) isCellGlobalId_CellGlobalId() {}

// sequence from e2sm-rmet.asn1:42
// {SNSSAI}
type Snssai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SSt []byte `protobuf:"bytes,1,opt,name=s_st,json=sST,proto3" json:"s_st,omitempty"`
	SD  []byte `protobuf:"bytes,2,opt,name=s_d,json=sD,proto3,oneof" json:"s_d,omitempty"`
}

func (x *Snssai) Reset() {
	*x = Snssai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Snssai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snssai) ProtoMessage() {}

func (x *Snssai) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snssai.ProtoReflect.Descriptor instead.
func (*Snssai) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{3}
}

func (x *Snssai) GetSSt() []byte {
	if x != nil {
		return x.SSt
	}
	return nil
}

func (x *Snssai) GetSD() []byte {
	if x != nil {
		return x.SD
	}
	return nil
}

// range of Integer from e2sm-rmet.asn1:47
// {FiveQI}
type FiveQi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FiveQi) Reset() {
	*x = FiveQi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FiveQi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FiveQi) ProtoMessage() {}

func (x *FiveQi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FiveQi.ProtoReflect.Descriptor instead.
func (*FiveQi) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{4}
}

func (x *FiveQi) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-rmet.asn1:49
// {QCI}
type Qci struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Qci) Reset() {
	*x = Qci{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qci) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qci) ProtoMessage() {}

func (x *Qci) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qci.ProtoReflect.Descriptor instead.
func (*Qci) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{5}
}

func (x *Qci) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-rmet.asn1:51
// {ARP}
type Arp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Arp) Reset() {
	*x = Arp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Arp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Arp) ProtoMessage() {}

func (x *Arp) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Arp.ProtoReflect.Descriptor instead.
func (*Arp) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{6}
}

func (x *Arp) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-rmet.asn1:61
// {GranularityPeriod}
type GranularityPeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GranularityPeriod) Reset() {
	*x = GranularityPeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GranularityPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GranularityPeriod) ProtoMessage() {}

func (x *GranularityPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GranularityPeriod.ProtoReflect.Descriptor instead.
func (*GranularityPeriod) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{7}
}

func (x *GranularityPeriod) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm-rmet.asn1:62
// {MeasurementType}
type MeasurementType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-rmet.asn1:62
	//
	// Types that are assignable to MeasurementType:
	//	*MeasurementType_MeasName
	//	*MeasurementType_MeasId
	MeasurementType isMeasurementType_MeasurementType `protobuf_oneof:"measurement_type"`
}

func (x *MeasurementType) Reset() {
	*x = MeasurementType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementType) ProtoMessage() {}

func (x *MeasurementType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementType.ProtoReflect.Descriptor instead.
func (*MeasurementType) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{8}
}

func (m *MeasurementType) GetMeasurementType() isMeasurementType_MeasurementType {
	if m != nil {
		return m.MeasurementType
	}
	return nil
}

func (x *MeasurementType) GetMeasName() *MeasurementTypeName {
	if x, ok := x.GetMeasurementType().(*MeasurementType_MeasName); ok {
		return x.MeasName
	}
	return nil
}

func (x *MeasurementType) GetMeasId() *MeasurementTypeId {
	if x, ok := x.GetMeasurementType().(*MeasurementType_MeasId); ok {
		return x.MeasId
	}
	return nil
}

type isMeasurementType_MeasurementType interface {
	isMeasurementType_MeasurementType()
}

type MeasurementType_MeasName struct {
	MeasName *MeasurementTypeName `protobuf:"bytes,1,opt,name=meas_name,json=measName,proto3,oneof"`
}

type MeasurementType_MeasId struct {
	MeasId *MeasurementTypeId `protobuf:"bytes,2,opt,name=meas_id,json=measID,proto3,oneof"`
}

func (*MeasurementType_MeasName) isMeasurementType_MeasurementType() {}

func (*MeasurementType_MeasId) isMeasurementType_MeasurementType() {}

// range of Integer from e2sm-rmet.asn1:69
// {MeasurementTypeID}
type MeasurementTypeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MeasurementTypeId) Reset() {
	*x = MeasurementTypeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementTypeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementTypeId) ProtoMessage() {}

func (x *MeasurementTypeId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementTypeId.ProtoReflect.Descriptor instead.
func (*MeasurementTypeId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{9}
}

func (x *MeasurementTypeId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-rmet.asn1:71
// {SubscriptionID}
type SubscriptionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SubscriptionId) Reset() {
	*x = SubscriptionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionId) ProtoMessage() {}

func (x *SubscriptionId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionId.ProtoReflect.Descriptor instead.
func (*SubscriptionId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{10}
}

func (x *SubscriptionId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm-rmet.asn1:76
// {GlobalRMETnode-ID}
type GlobalRmetnodeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-rmet.asn1:76
	//
	// Types that are assignable to GlobalRmetnodeId:
	//	*GlobalRmetnodeId_GNb
	//	*GlobalRmetnodeId_EnGNb
	//	*GlobalRmetnodeId_NgENb
	//	*GlobalRmetnodeId_ENb
	GlobalRmetnodeId isGlobalRmetnodeId_GlobalRmetnodeId `protobuf_oneof:"global_rmetnode_id"`
}

func (x *GlobalRmetnodeId) Reset() {
	*x = GlobalRmetnodeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalRmetnodeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalRmetnodeId) ProtoMessage() {}

func (x *GlobalRmetnodeId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalRmetnodeId.ProtoReflect.Descriptor instead.
func (*GlobalRmetnodeId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{11}
}

func (m *GlobalRmetnodeId) GetGlobalRmetnodeId() isGlobalRmetnodeId_GlobalRmetnodeId {
	if m != nil {
		return m.GlobalRmetnodeId
	}
	return nil
}

func (x *GlobalRmetnodeId) GetGNb() *GlobalRmetnodeGnbId {
	if x, ok := x.GetGlobalRmetnodeId().(*GlobalRmetnodeId_GNb); ok {
		return x.GNb
	}
	return nil
}

func (x *GlobalRmetnodeId) GetEnGNb() *GlobalRmetnodeEnGnbId {
	if x, ok := x.GetGlobalRmetnodeId().(*GlobalRmetnodeId_EnGNb); ok {
		return x.EnGNb
	}
	return nil
}

func (x *GlobalRmetnodeId) GetNgENb() *GlobalRmetnodeNgEnbId {
	if x, ok := x.GetGlobalRmetnodeId().(*GlobalRmetnodeId_NgENb); ok {
		return x.NgENb
	}
	return nil
}

func (x *GlobalRmetnodeId) GetENb() *GlobalRmetnodeEnbId {
	if x, ok := x.GetGlobalRmetnodeId().(*GlobalRmetnodeId_ENb); ok {
		return x.ENb
	}
	return nil
}

type isGlobalRmetnodeId_GlobalRmetnodeId interface {
	isGlobalRmetnodeId_GlobalRmetnodeId()
}

type GlobalRmetnodeId_GNb struct {
	GNb *GlobalRmetnodeGnbId `protobuf:"bytes,1,opt,name=g_nb,json=gNB,proto3,oneof"`
}

type GlobalRmetnodeId_EnGNb struct {
	EnGNb *GlobalRmetnodeEnGnbId `protobuf:"bytes,2,opt,name=en_g_nb,json=en-gNB,proto3,oneof"`
}

type GlobalRmetnodeId_NgENb struct {
	NgENb *GlobalRmetnodeNgEnbId `protobuf:"bytes,3,opt,name=ng_e_nb,json=ng-eNB,proto3,oneof"`
}

type GlobalRmetnodeId_ENb struct {
	ENb *GlobalRmetnodeEnbId `protobuf:"bytes,4,opt,name=e_nb,json=eNB,proto3,oneof"`
}

func (*GlobalRmetnodeId_GNb) isGlobalRmetnodeId_GlobalRmetnodeId() {}

func (*GlobalRmetnodeId_EnGNb) isGlobalRmetnodeId_GlobalRmetnodeId() {}

func (*GlobalRmetnodeId_NgENb) isGlobalRmetnodeId_GlobalRmetnodeId() {}

func (*GlobalRmetnodeId_ENb) isGlobalRmetnodeId_GlobalRmetnodeId() {}

// sequence from e2sm-rmet.asn1:84
// {GlobalRMETnode-gNB-ID}
type GlobalRmetnodeGnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalGNbId *GlobalgNbId `protobuf:"bytes,1,opt,name=global_g_nb_id,json=global-gNB-ID,proto3" json:"global_g_nb_id,omitempty"`
	GNbCuUpId   *GnbCuUpId   `protobuf:"bytes,2,opt,name=g_nb_cu_up_id,json=gNB-CU-UP-ID,proto3,oneof" json:"g_nb_cu_up_id,omitempty"`
	GNbDuId     *GnbDuId     `protobuf:"bytes,3,opt,name=g_nb_du_id,json=gNB-DU-ID,proto3,oneof" json:"g_nb_du_id,omitempty"`
}

func (x *GlobalRmetnodeGnbId) Reset() {
	*x = GlobalRmetnodeGnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalRmetnodeGnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalRmetnodeGnbId) ProtoMessage() {}

func (x *GlobalRmetnodeGnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalRmetnodeGnbId.ProtoReflect.Descriptor instead.
func (*GlobalRmetnodeGnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{12}
}

func (x *GlobalRmetnodeGnbId) GetGlobalGNbId() *GlobalgNbId {
	if x != nil {
		return x.GlobalGNbId
	}
	return nil
}

func (x *GlobalRmetnodeGnbId) GetGNbCuUpId() *GnbCuUpId {
	if x != nil {
		return x.GNbCuUpId
	}
	return nil
}

func (x *GlobalRmetnodeGnbId) GetGNbDuId() *GnbDuId {
	if x != nil {
		return x.GNbDuId
	}
	return nil
}

// sequence from e2sm-rmet.asn1:91
// {GlobalgNB-ID}
type GlobalgNbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlmnId *PlmnIdentity `protobuf:"bytes,1,opt,name=plmn_id,json=plmn-id,proto3" json:"plmn_id,omitempty"`
	GnbId  *GnbIdChoice  `protobuf:"bytes,2,opt,name=gnb_id,json=gnb-id,proto3" json:"gnb_id,omitempty"`
}

func (x *GlobalgNbId) Reset() {
	*x = GlobalgNbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalgNbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalgNbId) ProtoMessage() {}

func (x *GlobalgNbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalgNbId.ProtoReflect.Descriptor instead.
func (*GlobalgNbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{13}
}

func (x *GlobalgNbId) GetPlmnId() *PlmnIdentity {
	if x != nil {
		return x.PlmnId
	}
	return nil
}

func (x *GlobalgNbId) GetGnbId() *GnbIdChoice {
	if x != nil {
		return x.GnbId
	}
	return nil
}

// range of Integer from e2sm-rmet.asn1:96
// {GNB-CU-UP-ID}
type GnbCuUpId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GnbCuUpId) Reset() {
	*x = GnbCuUpId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbCuUpId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbCuUpId) ProtoMessage() {}

func (x *GnbCuUpId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbCuUpId.ProtoReflect.Descriptor instead.
func (*GnbCuUpId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{14}
}

func (x *GnbCuUpId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-rmet.asn1:98
// {GNB-DU-ID}
type GnbDuId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GnbDuId) Reset() {
	*x = GnbDuId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbDuId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbDuId) ProtoMessage() {}

func (x *GnbDuId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbDuId.ProtoReflect.Descriptor instead.
func (*GnbDuId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{15}
}

func (x *GnbDuId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm-rmet.asn1:101
// {GNB-ID-Choice}
type GnbIdChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-rmet.asn1:101
	//
	// Types that are assignable to GnbIdChoice:
	//	*GnbIdChoice_GnbId
	GnbIdChoice isGnbIdChoice_GnbIdChoice `protobuf_oneof:"gnb_id_choice"`
}

func (x *GnbIdChoice) Reset() {
	*x = GnbIdChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbIdChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbIdChoice) ProtoMessage() {}

func (x *GnbIdChoice) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbIdChoice.ProtoReflect.Descriptor instead.
func (*GnbIdChoice) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{16}
}

func (m *GnbIdChoice) GetGnbIdChoice() isGnbIdChoice_GnbIdChoice {
	if m != nil {
		return m.GnbIdChoice
	}
	return nil
}

func (x *GnbIdChoice) GetGnbId() *asn1.BitString {
	if x, ok := x.GetGnbIdChoice().(*GnbIdChoice_GnbId); ok {
		return x.GnbId
	}
	return nil
}

type isGnbIdChoice_GnbIdChoice interface {
	isGnbIdChoice_GnbIdChoice()
}

type GnbIdChoice_GnbId struct {
	GnbId *asn1.BitString `protobuf:"bytes,1,opt,name=gnb_id,json=gnb-ID,proto3,oneof"`
}

func (*GnbIdChoice_GnbId) isGnbIdChoice_GnbIdChoice() {}

// sequence from e2sm-rmet.asn1:106
// {GlobalRMETnode-en-gNB-ID}
type GlobalRmetnodeEnGnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalGNbId *GlobalenGnbId `protobuf:"bytes,1,opt,name=global_g_nb_id,json=global-gNB-ID,proto3" json:"global_g_nb_id,omitempty"`
	GNbCuUpId   *GnbCuUpId     `protobuf:"bytes,2,opt,name=g_nb_cu_up_id,json=gNB-CU-UP-ID,proto3,oneof" json:"g_nb_cu_up_id,omitempty"`
	GNbDuId     *GnbDuId       `protobuf:"bytes,3,opt,name=g_nb_du_id,json=gNB-DU-ID,proto3,oneof" json:"g_nb_du_id,omitempty"`
}

func (x *GlobalRmetnodeEnGnbId) Reset() {
	*x = GlobalRmetnodeEnGnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalRmetnodeEnGnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalRmetnodeEnGnbId) ProtoMessage() {}

func (x *GlobalRmetnodeEnGnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalRmetnodeEnGnbId.ProtoReflect.Descriptor instead.
func (*GlobalRmetnodeEnGnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{17}
}

func (x *GlobalRmetnodeEnGnbId) GetGlobalGNbId() *GlobalenGnbId {
	if x != nil {
		return x.GlobalGNbId
	}
	return nil
}

func (x *GlobalRmetnodeEnGnbId) GetGNbCuUpId() *GnbCuUpId {
	if x != nil {
		return x.GNbCuUpId
	}
	return nil
}

func (x *GlobalRmetnodeEnGnbId) GetGNbDuId() *GnbDuId {
	if x != nil {
		return x.GNbDuId
	}
	return nil
}

// sequence from e2sm-rmet.asn1:113
// {GlobalenGNB-ID}
type GlobalenGnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity *PlmnIdentity `protobuf:"bytes,1,opt,name=p_lmn_identity,json=pLMN-Identity,proto3" json:"p_lmn_identity,omitempty"`
	GNbId        *EngnbId      `protobuf:"bytes,2,opt,name=g_nb_id,json=gNB-ID,proto3" json:"g_nb_id,omitempty"`
}

func (x *GlobalenGnbId) Reset() {
	*x = GlobalenGnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalenGnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalenGnbId) ProtoMessage() {}

func (x *GlobalenGnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalenGnbId.ProtoReflect.Descriptor instead.
func (*GlobalenGnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{18}
}

func (x *GlobalenGnbId) GetPLmnIdentity() *PlmnIdentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *GlobalenGnbId) GetGNbId() *EngnbId {
	if x != nil {
		return x.GNbId
	}
	return nil
}

// sequence from e2sm-rmet.asn1:119
// {ENGNB-ID}
type EngnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-rmet.asn1:119
	//
	// Types that are assignable to EngnbId:
	//	*EngnbId_GNbId
	EngnbId isEngnbId_EngnbId `protobuf_oneof:"engnb_id"`
}

func (x *EngnbId) Reset() {
	*x = EngnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngnbId) ProtoMessage() {}

func (x *EngnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngnbId.ProtoReflect.Descriptor instead.
func (*EngnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{19}
}

func (m *EngnbId) GetEngnbId() isEngnbId_EngnbId {
	if m != nil {
		return m.EngnbId
	}
	return nil
}

func (x *EngnbId) GetGNbId() *asn1.BitString {
	if x, ok := x.GetEngnbId().(*EngnbId_GNbId); ok {
		return x.GNbId
	}
	return nil
}

type isEngnbId_EngnbId interface {
	isEngnbId_EngnbId()
}

type EngnbId_GNbId struct {
	GNbId *asn1.BitString `protobuf:"bytes,1,opt,name=g_nb_id,json=gNB-ID,proto3,oneof"`
}

func (*EngnbId_GNbId) isEngnbId_EngnbId() {}

// sequence from e2sm-rmet.asn1:124
// {GlobalRMETnode-ng-eNB-ID}
type GlobalRmetnodeNgEnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalNgENbId *GlobalngeNbId `protobuf:"bytes,1,opt,name=global_ng_e_nb_id,json=global-ng-eNB-ID,proto3" json:"global_ng_e_nb_id,omitempty"`
	GNbDuId       *GnbDuId       `protobuf:"bytes,2,opt,name=g_nb_du_id,json=gNB-DU-ID,proto3,oneof" json:"g_nb_du_id,omitempty"`
}

func (x *GlobalRmetnodeNgEnbId) Reset() {
	*x = GlobalRmetnodeNgEnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalRmetnodeNgEnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalRmetnodeNgEnbId) ProtoMessage() {}

func (x *GlobalRmetnodeNgEnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalRmetnodeNgEnbId.ProtoReflect.Descriptor instead.
func (*GlobalRmetnodeNgEnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{20}
}

func (x *GlobalRmetnodeNgEnbId) GetGlobalNgENbId() *GlobalngeNbId {
	if x != nil {
		return x.GlobalNgENbId
	}
	return nil
}

func (x *GlobalRmetnodeNgEnbId) GetGNbDuId() *GnbDuId {
	if x != nil {
		return x.GNbDuId
	}
	return nil
}

// sequence from e2sm-rmet.asn1:130
// {GlobalngeNB-ID}
type GlobalngeNbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlmnId          *PlmnIdentity   `protobuf:"bytes,1,opt,name=plmn_id,json=plmn-id,proto3" json:"plmn_id,omitempty"`
	EnbId           *EnbIdChoice    `protobuf:"bytes,2,opt,name=enb_id,json=enb-id,proto3" json:"enb_id,omitempty"`
	ShortMacroENbId *asn1.BitString `protobuf:"bytes,3,opt,name=short_macro_e_nb_id,json=short-Macro-eNB-ID,proto3" json:"short_macro_e_nb_id,omitempty"`
	LongMacroENbId  *asn1.BitString `protobuf:"bytes,4,opt,name=long_macro_e_nb_id,json=long-Macro-eNB-ID,proto3" json:"long_macro_e_nb_id,omitempty"`
}

func (x *GlobalngeNbId) Reset() {
	*x = GlobalngeNbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalngeNbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalngeNbId) ProtoMessage() {}

func (x *GlobalngeNbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalngeNbId.ProtoReflect.Descriptor instead.
func (*GlobalngeNbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{21}
}

func (x *GlobalngeNbId) GetPlmnId() *PlmnIdentity {
	if x != nil {
		return x.PlmnId
	}
	return nil
}

func (x *GlobalngeNbId) GetEnbId() *EnbIdChoice {
	if x != nil {
		return x.EnbId
	}
	return nil
}

func (x *GlobalngeNbId) GetShortMacroENbId() *asn1.BitString {
	if x != nil {
		return x.ShortMacroENbId
	}
	return nil
}

func (x *GlobalngeNbId) GetLongMacroENbId() *asn1.BitString {
	if x != nil {
		return x.LongMacroENbId
	}
	return nil
}

// sequence from e2sm-rmet.asn1:138
// {ENB-ID-Choice}
type EnbIdChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-rmet.asn1:138
	//
	// Types that are assignable to EnbIdChoice:
	//	*EnbIdChoice_EnbIdMacro
	//	*EnbIdChoice_EnbIdShortmacro
	//	*EnbIdChoice_EnbIdLongmacro
	EnbIdChoice isEnbIdChoice_EnbIdChoice `protobuf_oneof:"enb_id_choice"`
}

func (x *EnbIdChoice) Reset() {
	*x = EnbIdChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnbIdChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnbIdChoice) ProtoMessage() {}

func (x *EnbIdChoice) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnbIdChoice.ProtoReflect.Descriptor instead.
func (*EnbIdChoice) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{22}
}

func (m *EnbIdChoice) GetEnbIdChoice() isEnbIdChoice_EnbIdChoice {
	if m != nil {
		return m.EnbIdChoice
	}
	return nil
}

func (x *EnbIdChoice) GetEnbIdMacro() *asn1.BitString {
	if x, ok := x.GetEnbIdChoice().(*EnbIdChoice_EnbIdMacro); ok {
		return x.EnbIdMacro
	}
	return nil
}

func (x *EnbIdChoice) GetEnbIdShortmacro() *asn1.BitString {
	if x, ok := x.GetEnbIdChoice().(*EnbIdChoice_EnbIdShortmacro); ok {
		return x.EnbIdShortmacro
	}
	return nil
}

func (x *EnbIdChoice) GetEnbIdLongmacro() *asn1.BitString {
	if x, ok := x.GetEnbIdChoice().(*EnbIdChoice_EnbIdLongmacro); ok {
		return x.EnbIdLongmacro
	}
	return nil
}

type isEnbIdChoice_EnbIdChoice interface {
	isEnbIdChoice_EnbIdChoice()
}

type EnbIdChoice_EnbIdMacro struct {
	EnbIdMacro *asn1.BitString `protobuf:"bytes,1,opt,name=enb_id_macro,json=enb-ID-macro,proto3,oneof"`
}

type EnbIdChoice_EnbIdShortmacro struct {
	EnbIdShortmacro *asn1.BitString `protobuf:"bytes,2,opt,name=enb_id_shortmacro,json=enb-ID-shortmacro,proto3,oneof"`
}

type EnbIdChoice_EnbIdLongmacro struct {
	EnbIdLongmacro *asn1.BitString `protobuf:"bytes,3,opt,name=enb_id_longmacro,json=enb-ID-longmacro,proto3,oneof"`
}

func (*EnbIdChoice_EnbIdMacro) isEnbIdChoice_EnbIdChoice() {}

func (*EnbIdChoice_EnbIdShortmacro) isEnbIdChoice_EnbIdChoice() {}

func (*EnbIdChoice_EnbIdLongmacro) isEnbIdChoice_EnbIdChoice() {}

// sequence from e2sm-rmet.asn1:145
// {GlobalRMETnode-eNB-ID}
type GlobalRmetnodeEnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalENbId *GlobalEnbId `protobuf:"bytes,1,opt,name=global_e_nb_id,json=global-eNB-ID,proto3" json:"global_e_nb_id,omitempty"`
}

func (x *GlobalRmetnodeEnbId) Reset() {
	*x = GlobalRmetnodeEnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalRmetnodeEnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalRmetnodeEnbId) ProtoMessage() {}

func (x *GlobalRmetnodeEnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalRmetnodeEnbId.ProtoReflect.Descriptor instead.
func (*GlobalRmetnodeEnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{23}
}

func (x *GlobalRmetnodeEnbId) GetGlobalENbId() *GlobalEnbId {
	if x != nil {
		return x.GlobalENbId
	}
	return nil
}

// sequence from e2sm-rmet.asn1:150
// {GlobalENB-ID}
type GlobalEnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity *PlmnIdentity `protobuf:"bytes,1,opt,name=p_lmn_identity,json=pLMN-Identity,proto3" json:"p_lmn_identity,omitempty"`
	ENbId        *EnbId        `protobuf:"bytes,2,opt,name=e_nb_id,json=eNB-ID,proto3" json:"e_nb_id,omitempty"`
}

func (x *GlobalEnbId) Reset() {
	*x = GlobalEnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalEnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalEnbId) ProtoMessage() {}

func (x *GlobalEnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalEnbId.ProtoReflect.Descriptor instead.
func (*GlobalEnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{24}
}

func (x *GlobalEnbId) GetPLmnIdentity() *PlmnIdentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *GlobalEnbId) GetENbId() *EnbId {
	if x != nil {
		return x.ENbId
	}
	return nil
}

// sequence from e2sm-rmet.asn1:156
// {ENB-ID}
type EnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-rmet.asn1:156
	//
	// Types that are assignable to EnbId:
	//	*EnbId_MacroENbId
	//	*EnbId_HomeENbId
	EnbId isEnbId_EnbId `protobuf_oneof:"enb_id"`
}

func (x *EnbId) Reset() {
	*x = EnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnbId) ProtoMessage() {}

func (x *EnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnbId.ProtoReflect.Descriptor instead.
func (*EnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{25}
}

func (m *EnbId) GetEnbId() isEnbId_EnbId {
	if m != nil {
		return m.EnbId
	}
	return nil
}

func (x *EnbId) GetMacroENbId() *asn1.BitString {
	if x, ok := x.GetEnbId().(*EnbId_MacroENbId); ok {
		return x.MacroENbId
	}
	return nil
}

func (x *EnbId) GetHomeENbId() *asn1.BitString {
	if x, ok := x.GetEnbId().(*EnbId_HomeENbId); ok {
		return x.HomeENbId
	}
	return nil
}

type isEnbId_EnbId interface {
	isEnbId_EnbId()
}

type EnbId_MacroENbId struct {
	MacroENbId *asn1.BitString `protobuf:"bytes,1,opt,name=macro_e_nb_id,json=macro-eNB-ID,proto3,oneof"`
}

type EnbId_HomeENbId struct {
	HomeENbId *asn1.BitString `protobuf:"bytes,2,opt,name=home_e_nb_id,json=home-eNB-ID,proto3,oneof"`
}

func (*EnbId_MacroENbId) isEnbId_EnbId() {}

func (*EnbId_HomeENbId) isEnbId_EnbId() {}

// sequence from e2sm-rmet.asn1:164
// {RANfunction-Name}
type RanfunctionName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanFunctionShortName   string `protobuf:"bytes,1,opt,name=ran_function_short_name,json=ranFunction-ShortName,proto3" json:"ran_function_short_name,omitempty"`
	RanFunctionE2SmOid     string `protobuf:"bytes,2,opt,name=ran_function_e2_sm_oid,json=ranFunction-E2SM-OID,proto3" json:"ran_function_e2_sm_oid,omitempty"`
	RanFunctionDescription string `protobuf:"bytes,3,opt,name=ran_function_description,json=ranFunction-Description,proto3" json:"ran_function_description,omitempty"`
	RanFunctionInstance    *int32 `protobuf:"varint,4,opt,name=ran_function_instance,json=ranFunction-Instance,proto3,oneof" json:"ran_function_instance,omitempty"`
}

func (x *RanfunctionName) Reset() {
	*x = RanfunctionName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionName) ProtoMessage() {}

func (x *RanfunctionName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionName.ProtoReflect.Descriptor instead.
func (*RanfunctionName) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{26}
}

func (x *RanfunctionName) GetRanFunctionShortName() string {
	if x != nil {
		return x.RanFunctionShortName
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionE2SmOid() string {
	if x != nil {
		return x.RanFunctionE2SmOid
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionDescription() string {
	if x != nil {
		return x.RanFunctionDescription
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionInstance() int32 {
	if x != nil && x.RanFunctionInstance != nil {
		return *x.RanFunctionInstance
	}
	return 0
}

// range of Integer from e2sm-rmet.asn1:173
// {RIC-Style-Type}
type RicStyleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RicStyleType) Reset() {
	*x = RicStyleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicStyleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicStyleType) ProtoMessage() {}

func (x *RicStyleType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicStyleType.ProtoReflect.Descriptor instead.
func (*RicStyleType) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{27}
}

func (x *RicStyleType) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-rmet.asn1:181
// {RIC-Format-Type}
type RicFormatType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RicFormatType) Reset() {
	*x = RicFormatType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicFormatType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicFormatType) ProtoMessage() {}

func (x *RicFormatType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicFormatType.ProtoReflect.Descriptor instead.
func (*RicFormatType) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{28}
}

func (x *RicFormatType) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-rmet.asn1:181
// {-}
type MaxnoofRmetnodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxnoofRmetnodes) Reset() {
	*x = MaxnoofRmetnodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofRmetnodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofRmetnodes) ProtoMessage() {}

func (x *MaxnoofRmetnodes) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofRmetnodes.ProtoReflect.Descriptor instead.
func (*MaxnoofRmetnodes) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{29}
}

func (x *MaxnoofRmetnodes) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-rmet.asn1:182
// {-}
type MaxnoofCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16384,valueUB:16384,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxnoofCells) Reset() {
	*x = MaxnoofCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofCells) ProtoMessage() {}

func (x *MaxnoofCells) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofCells.ProtoReflect.Descriptor instead.
func (*MaxnoofCells) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{30}
}

func (x *MaxnoofCells) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-rmet.asn1:183
// {-}
type MaxnoofRicstyles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxnoofRicstyles) Reset() {
	*x = MaxnoofRicstyles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofRicstyles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofRicstyles) ProtoMessage() {}

func (x *MaxnoofRicstyles) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofRicstyles.ProtoReflect.Descriptor instead.
func (*MaxnoofRicstyles) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{31}
}

func (x *MaxnoofRicstyles) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-rmet.asn1:184
// {-}
type MaxnoofMeasurementInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65536,valueUB:65536,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxnoofMeasurementInfo) Reset() {
	*x = MaxnoofMeasurementInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofMeasurementInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofMeasurementInfo) ProtoMessage() {}

func (x *MaxnoofMeasurementInfo) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofMeasurementInfo.ProtoReflect.Descriptor instead.
func (*MaxnoofMeasurementInfo) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{32}
}

func (x *MaxnoofMeasurementInfo) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-rmet.asn1:185
// {-}
type MaxnoofMeasurementRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65536,valueUB:65536,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxnoofMeasurementRecord) Reset() {
	*x = MaxnoofMeasurementRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofMeasurementRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofMeasurementRecord) ProtoMessage() {}

func (x *MaxnoofMeasurementRecord) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofMeasurementRecord.ProtoReflect.Descriptor instead.
func (*MaxnoofMeasurementRecord) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{33}
}

func (x *MaxnoofMeasurementRecord) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-rmet.asn1:186
// {-}
type MaxnoofMeasurementValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:2147483647,valueUB:2147483647,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxnoofMeasurementValue) Reset() {
	*x = MaxnoofMeasurementValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofMeasurementValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofMeasurementValue) ProtoMessage() {}

func (x *MaxnoofMeasurementValue) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofMeasurementValue.ProtoReflect.Descriptor instead.
func (*MaxnoofMeasurementValue) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{34}
}

func (x *MaxnoofMeasurementValue) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-rmet.asn1:191
// {-}
type MaxofUe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65536,valueUB:65536,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxofUe) Reset() {
	*x = MaxofUe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxofUe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxofUe) ProtoMessage() {}

func (x *MaxofUe) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxofUe.ProtoReflect.Descriptor instead.
func (*MaxofUe) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{35}
}

func (x *MaxofUe) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-rmet.asn1:193
// {UEID}
type Ueid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Ueid) Reset() {
	*x = Ueid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ueid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ueid) ProtoMessage() {}

func (x *Ueid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ueid.ProtoReflect.Descriptor instead.
func (*Ueid) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{36}
}

func (x *Ueid) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm-rmet.asn1:198
// {UEItem}
type Ueitem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UeId  *Ueid  `protobuf:"bytes,1,opt,name=ue_id,json=ueID,proto3" json:"ue_id,omitempty"`
	UeTag *Uetag `protobuf:"bytes,2,opt,name=ue_tag,json=ueTag,proto3,oneof" json:"ue_tag,omitempty"`
}

func (x *Ueitem) Reset() {
	*x = Ueitem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ueitem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ueitem) ProtoMessage() {}

func (x *Ueitem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ueitem.ProtoReflect.Descriptor instead.
func (*Ueitem) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{37}
}

func (x *Ueitem) GetUeId() *Ueid {
	if x != nil {
		return x.UeId
	}
	return nil
}

func (x *Ueitem) GetUeTag() *Uetag {
	if x != nil {
		return x.UeTag
	}
	return nil
}

// sequence from e2sm-rmet.asn1:207
// {UEList}
type Uelist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:""
	Value []*Ueitem `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *Uelist) Reset() {
	*x = Uelist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uelist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uelist) ProtoMessage() {}

func (x *Uelist) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uelist.ProtoReflect.Descriptor instead.
func (*Uelist) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{38}
}

func (x *Uelist) GetValue() []*Ueitem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm-rmet.asn1:209
// {MeasurementInfoList}
type MeasurementInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:""
	Value []*MeasurementInfoItem `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *MeasurementInfoList) Reset() {
	*x = MeasurementInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementInfoList) ProtoMessage() {}

func (x *MeasurementInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementInfoList.ProtoReflect.Descriptor instead.
func (*MeasurementInfoList) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{39}
}

func (x *MeasurementInfoList) GetValue() []*MeasurementInfoItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm-rmet.asn1:210
// {MeasurementInfoItem}
type MeasurementInfoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeasType *MeasurementType `protobuf:"bytes,1,opt,name=meas_type,json=measType,proto3" json:"meas_type,omitempty"`
}

func (x *MeasurementInfoItem) Reset() {
	*x = MeasurementInfoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementInfoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementInfoItem) ProtoMessage() {}

func (x *MeasurementInfoItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementInfoItem.ProtoReflect.Descriptor instead.
func (*MeasurementInfoItem) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{40}
}

func (x *MeasurementInfoItem) GetMeasType() *MeasurementType {
	if x != nil {
		return x.MeasType
	}
	return nil
}

// sequence from e2sm-rmet.asn1:217
// {MeasurementData}
type MeasurementData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:""
	Value []*MeasurementRecord `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *MeasurementData) Reset() {
	*x = MeasurementData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementData) ProtoMessage() {}

func (x *MeasurementData) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementData.ProtoReflect.Descriptor instead.
func (*MeasurementData) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{41}
}

func (x *MeasurementData) GetValue() []*MeasurementRecord {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm-rmet.asn1:218
// {MeasurementRecord}
type MeasurementRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UeId           *Ueid                  `protobuf:"bytes,1,opt,name=ue_id,json=ueID,proto3" json:"ue_id,omitempty"`
	UeTag          *Uetag                 `protobuf:"bytes,2,opt,name=ue_tag,json=ueTag,proto3" json:"ue_tag,omitempty"`
	MeasRecordItem *MeasurementRecordItem `protobuf:"bytes,3,opt,name=meas_record_item,json=measRecordItem,proto3" json:"meas_record_item,omitempty"`
}

func (x *MeasurementRecord) Reset() {
	*x = MeasurementRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementRecord) ProtoMessage() {}

func (x *MeasurementRecord) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementRecord.ProtoReflect.Descriptor instead.
func (*MeasurementRecord) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{42}
}

func (x *MeasurementRecord) GetUeId() *Ueid {
	if x != nil {
		return x.UeId
	}
	return nil
}

func (x *MeasurementRecord) GetUeTag() *Uetag {
	if x != nil {
		return x.UeTag
	}
	return nil
}

func (x *MeasurementRecord) GetMeasRecordItem() *MeasurementRecordItem {
	if x != nil {
		return x.MeasRecordItem
	}
	return nil
}

// sequence from e2sm-rmet.asn1:231
// {MeasurementRecordItem}
type MeasurementRecordItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_kpm_v2.0.3-radisys.asn:279
	//
	// Types that are assignable to MeasurementRecordItem:
	//	*MeasurementRecordItem_Integer
	//	*MeasurementRecordItem_Real
	//	*MeasurementRecordItem_NoValue
	MeasurementRecordItem isMeasurementRecordItem_MeasurementRecordItem `protobuf_oneof:"measurement_record_item"`
}

func (x *MeasurementRecordItem) Reset() {
	*x = MeasurementRecordItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementRecordItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementRecordItem) ProtoMessage() {}

func (x *MeasurementRecordItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementRecordItem.ProtoReflect.Descriptor instead.
func (*MeasurementRecordItem) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{43}
}

func (m *MeasurementRecordItem) GetMeasurementRecordItem() isMeasurementRecordItem_MeasurementRecordItem {
	if m != nil {
		return m.MeasurementRecordItem
	}
	return nil
}

func (x *MeasurementRecordItem) GetInteger() int64 {
	if x, ok := x.GetMeasurementRecordItem().(*MeasurementRecordItem_Integer); ok {
		return x.Integer
	}
	return 0
}

func (x *MeasurementRecordItem) GetReal() float64 {
	if x, ok := x.GetMeasurementRecordItem().(*MeasurementRecordItem_Real); ok {
		return x.Real
	}
	return 0
}

func (x *MeasurementRecordItem) GetNoValue() int32 {
	if x, ok := x.GetMeasurementRecordItem().(*MeasurementRecordItem_NoValue); ok {
		return x.NoValue
	}
	return 0
}

type isMeasurementRecordItem_MeasurementRecordItem interface {
	isMeasurementRecordItem_MeasurementRecordItem()
}

type MeasurementRecordItem_Integer struct {
	// @inject_tag: aper:"choiceIdx:1,valueLB:0,valueUB:4294967295"
	Integer int64 `protobuf:"varint,1,opt,name=integer,proto3,oneof"`
}

type MeasurementRecordItem_Real struct {
	// @inject_tag: aper:"choiceIdx:2"
	Real float64 `protobuf:"fixed64,2,opt,name=real,proto3,oneof"`
}

type MeasurementRecordItem_NoValue struct {
	// @inject_tag: aper:"choiceIdx:3,valueLB:0,valueUB:0"
	NoValue int32 `protobuf:"varint,3,opt,name=no_value,json=noValue,proto3,oneof"`
}

func (*MeasurementRecordItem_Integer) isMeasurementRecordItem_MeasurementRecordItem() {}

func (*MeasurementRecordItem_Real) isMeasurementRecordItem_MeasurementRecordItem() {}

func (*MeasurementRecordItem_NoValue) isMeasurementRecordItem_MeasurementRecordItem() {}

// sequence from e2sm-rmet.asn1:236
// {MeasurementInfo-Action-List}
type MeasurementInfoActionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:""
	Value []*MeasurementInfoActionItem `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *MeasurementInfoActionList) Reset() {
	*x = MeasurementInfoActionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementInfoActionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementInfoActionList) ProtoMessage() {}

func (x *MeasurementInfoActionList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementInfoActionList.ProtoReflect.Descriptor instead.
func (*MeasurementInfoActionList) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{44}
}

func (x *MeasurementInfoActionList) GetValue() []*MeasurementInfoActionItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm-rmet.asn1:237
// {MeasurementInfo-Action-Item}
type MeasurementInfoActionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeasName *MeasurementTypeName `protobuf:"bytes,1,opt,name=meas_name,json=measName,proto3" json:"meas_name,omitempty"`
	MeasId   *MeasurementTypeId   `protobuf:"bytes,2,opt,name=meas_id,json=measID,proto3,oneof" json:"meas_id,omitempty"`
}

func (x *MeasurementInfoActionItem) Reset() {
	*x = MeasurementInfoActionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementInfoActionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementInfoActionItem) ProtoMessage() {}

func (x *MeasurementInfoActionItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementInfoActionItem.ProtoReflect.Descriptor instead.
func (*MeasurementInfoActionItem) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{45}
}

func (x *MeasurementInfoActionItem) GetMeasName() *MeasurementTypeName {
	if x != nil {
		return x.MeasName
	}
	return nil
}

func (x *MeasurementInfoActionItem) GetMeasId() *MeasurementTypeId {
	if x != nil {
		return x.MeasId
	}
	return nil
}

// sequence from e2sm-rmet.asn1:254
// {E2SM-RMET-EventTriggerDefinition}
type E2SmRmetEventTriggerDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventDefinitionFormats *EventTriggerDefinitionFormats `protobuf:"bytes,1,opt,name=event_definition_formats,json=eventDefinition-formats,proto3" json:"event_definition_formats,omitempty"`
}

func (x *E2SmRmetEventTriggerDefinition) Reset() {
	*x = E2SmRmetEventTriggerDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRmetEventTriggerDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRmetEventTriggerDefinition) ProtoMessage() {}

func (x *E2SmRmetEventTriggerDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRmetEventTriggerDefinition.ProtoReflect.Descriptor instead.
func (*E2SmRmetEventTriggerDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{46}
}

func (x *E2SmRmetEventTriggerDefinition) GetEventDefinitionFormats() *EventTriggerDefinitionFormats {
	if x != nil {
		return x.EventDefinitionFormats
	}
	return nil
}

type EventTriggerDefinitionFormats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2SmRmetEventTriggerDefinition:
	//	*EventTriggerDefinitionFormats_EventDefinitionFormat1
	E2SmRmetEventTriggerDefinition isEventTriggerDefinitionFormats_E2SmRmetEventTriggerDefinition `protobuf_oneof:"e2_sm_rmet_event_trigger_definition"`
}

func (x *EventTriggerDefinitionFormats) Reset() {
	*x = EventTriggerDefinitionFormats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTriggerDefinitionFormats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTriggerDefinitionFormats) ProtoMessage() {}

func (x *EventTriggerDefinitionFormats) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTriggerDefinitionFormats.ProtoReflect.Descriptor instead.
func (*EventTriggerDefinitionFormats) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{47}
}

func (m *EventTriggerDefinitionFormats) GetE2SmRmetEventTriggerDefinition() isEventTriggerDefinitionFormats_E2SmRmetEventTriggerDefinition {
	if m != nil {
		return m.E2SmRmetEventTriggerDefinition
	}
	return nil
}

func (x *EventTriggerDefinitionFormats) GetEventDefinitionFormat1() *E2SmRmetEventTriggerDefinitionFormat1 {
	if x, ok := x.GetE2SmRmetEventTriggerDefinition().(*EventTriggerDefinitionFormats_EventDefinitionFormat1); ok {
		return x.EventDefinitionFormat1
	}
	return nil
}

type isEventTriggerDefinitionFormats_E2SmRmetEventTriggerDefinition interface {
	isEventTriggerDefinitionFormats_E2SmRmetEventTriggerDefinition()
}

type EventTriggerDefinitionFormats_EventDefinitionFormat1 struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	EventDefinitionFormat1 *E2SmRmetEventTriggerDefinitionFormat1 `protobuf:"bytes,1,opt,name=event_definition_format1,json=eventDefinition_Format1,proto3,oneof"`
}

func (*EventTriggerDefinitionFormats_EventDefinitionFormat1) isEventTriggerDefinitionFormats_E2SmRmetEventTriggerDefinition() {
}

// sequence from e2sm-rmet.asn1:259
// {E2SM-RMET-EventTriggerDefinition-Format1}
type E2SmRmetEventTriggerDefinitionFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportingPeriod int64 `protobuf:"varint,1,opt,name=reporting_period,json=reportingPeriod,proto3" json:"reporting_period,omitempty"`
}

func (x *E2SmRmetEventTriggerDefinitionFormat1) Reset() {
	*x = E2SmRmetEventTriggerDefinitionFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRmetEventTriggerDefinitionFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRmetEventTriggerDefinitionFormat1) ProtoMessage() {}

func (x *E2SmRmetEventTriggerDefinitionFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRmetEventTriggerDefinitionFormat1.ProtoReflect.Descriptor instead.
func (*E2SmRmetEventTriggerDefinitionFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{48}
}

func (x *E2SmRmetEventTriggerDefinitionFormat1) GetReportingPeriod() int64 {
	if x != nil {
		return x.ReportingPeriod
	}
	return 0
}

// sequence from e2sm-rmet.asn1:268
// {E2SM-RMET-ActionDefinition}
type E2SmRmetActionDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicStyleType            *RicStyleType            `protobuf:"bytes,1,opt,name=ric_style_type,json=ric-Style-Type,proto3" json:"ric_style_type,omitempty"`
	ActionDefinitionFormats *ActionDefinitionFormats `protobuf:"bytes,2,opt,name=action_definition_formats,json=actionDefinition-formats,proto3" json:"action_definition_formats,omitempty"`
}

func (x *E2SmRmetActionDefinition) Reset() {
	*x = E2SmRmetActionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRmetActionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRmetActionDefinition) ProtoMessage() {}

func (x *E2SmRmetActionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRmetActionDefinition.ProtoReflect.Descriptor instead.
func (*E2SmRmetActionDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{49}
}

func (x *E2SmRmetActionDefinition) GetRicStyleType() *RicStyleType {
	if x != nil {
		return x.RicStyleType
	}
	return nil
}

func (x *E2SmRmetActionDefinition) GetActionDefinitionFormats() *ActionDefinitionFormats {
	if x != nil {
		return x.ActionDefinitionFormats
	}
	return nil
}

type ActionDefinitionFormats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2SmRmetActionDefinition:
	//	*ActionDefinitionFormats_ActionDefinitionFormat1
	E2SmRmetActionDefinition isActionDefinitionFormats_E2SmRmetActionDefinition `protobuf_oneof:"e2_sm_rmet_action_definition"`
}

func (x *ActionDefinitionFormats) Reset() {
	*x = ActionDefinitionFormats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionDefinitionFormats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionDefinitionFormats) ProtoMessage() {}

func (x *ActionDefinitionFormats) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionDefinitionFormats.ProtoReflect.Descriptor instead.
func (*ActionDefinitionFormats) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{50}
}

func (m *ActionDefinitionFormats) GetE2SmRmetActionDefinition() isActionDefinitionFormats_E2SmRmetActionDefinition {
	if m != nil {
		return m.E2SmRmetActionDefinition
	}
	return nil
}

func (x *ActionDefinitionFormats) GetActionDefinitionFormat1() *E2SmRmetActionDefinitionFormat1 {
	if x, ok := x.GetE2SmRmetActionDefinition().(*ActionDefinitionFormats_ActionDefinitionFormat1); ok {
		return x.ActionDefinitionFormat1
	}
	return nil
}

type isActionDefinitionFormats_E2SmRmetActionDefinition interface {
	isActionDefinitionFormats_E2SmRmetActionDefinition()
}

type ActionDefinitionFormats_ActionDefinitionFormat1 struct {
	// @inject_tag: aper:"valueExt,choiceIdx:1"
	ActionDefinitionFormat1 *E2SmRmetActionDefinitionFormat1 `protobuf:"bytes,2,opt,name=action_definition_format1,json=actionDefinition_Format1,proto3,oneof"`
}

func (*ActionDefinitionFormats_ActionDefinitionFormat1) isActionDefinitionFormats_E2SmRmetActionDefinition() {
}

// sequence from e2sm-rmet.asn1:277
// {E2SM-RMET-ActionDefinition-Format1}
type E2SmRmetActionDefinitionFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellObjId    *CellObjectId        `protobuf:"bytes,1,opt,name=cell_obj_id,json=cellObjID,proto3" json:"cell_obj_id,omitempty"`
	MeasInfoList *MeasurementInfoList `protobuf:"bytes,2,opt,name=meas_info_list,json=measInfoList,proto3" json:"meas_info_list,omitempty"`
	GranulPeriod *GranularityPeriod   `protobuf:"bytes,3,opt,name=granul_period,json=granulPeriod,proto3" json:"granul_period,omitempty"`
	SubscriptId  *SubscriptionId      `protobuf:"bytes,4,opt,name=subscript_id,json=subscriptID,proto3" json:"subscript_id,omitempty"`
}

func (x *E2SmRmetActionDefinitionFormat1) Reset() {
	*x = E2SmRmetActionDefinitionFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRmetActionDefinitionFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRmetActionDefinitionFormat1) ProtoMessage() {}

func (x *E2SmRmetActionDefinitionFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRmetActionDefinitionFormat1.ProtoReflect.Descriptor instead.
func (*E2SmRmetActionDefinitionFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{51}
}

func (x *E2SmRmetActionDefinitionFormat1) GetCellObjId() *CellObjectId {
	if x != nil {
		return x.CellObjId
	}
	return nil
}

func (x *E2SmRmetActionDefinitionFormat1) GetMeasInfoList() *MeasurementInfoList {
	if x != nil {
		return x.MeasInfoList
	}
	return nil
}

func (x *E2SmRmetActionDefinitionFormat1) GetGranulPeriod() *GranularityPeriod {
	if x != nil {
		return x.GranulPeriod
	}
	return nil
}

func (x *E2SmRmetActionDefinitionFormat1) GetSubscriptId() *SubscriptionId {
	if x != nil {
		return x.SubscriptId
	}
	return nil
}

// sequence from e2sm-rmet.asn1:292
// {E2SM-RMET-IndicationHeader}
type E2SmRmetIndicationHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndicationHeaderFormats *IndicationHeaderFormats `protobuf:"bytes,1,opt,name=indication_header_formats,json=indicationHeader-formats,proto3" json:"indication_header_formats,omitempty"`
}

func (x *E2SmRmetIndicationHeader) Reset() {
	*x = E2SmRmetIndicationHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRmetIndicationHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRmetIndicationHeader) ProtoMessage() {}

func (x *E2SmRmetIndicationHeader) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRmetIndicationHeader.ProtoReflect.Descriptor instead.
func (*E2SmRmetIndicationHeader) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{52}
}

func (x *E2SmRmetIndicationHeader) GetIndicationHeaderFormats() *IndicationHeaderFormats {
	if x != nil {
		return x.IndicationHeaderFormats
	}
	return nil
}

type IndicationHeaderFormats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2SmRmetIndicationHeader:
	//	*IndicationHeaderFormats_IndicationHeaderFormat1
	E2SmRmetIndicationHeader isIndicationHeaderFormats_E2SmRmetIndicationHeader `protobuf_oneof:"e2_sm_rmet_indication_header"`
}

func (x *IndicationHeaderFormats) Reset() {
	*x = IndicationHeaderFormats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicationHeaderFormats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicationHeaderFormats) ProtoMessage() {}

func (x *IndicationHeaderFormats) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicationHeaderFormats.ProtoReflect.Descriptor instead.
func (*IndicationHeaderFormats) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{53}
}

func (m *IndicationHeaderFormats) GetE2SmRmetIndicationHeader() isIndicationHeaderFormats_E2SmRmetIndicationHeader {
	if m != nil {
		return m.E2SmRmetIndicationHeader
	}
	return nil
}

func (x *IndicationHeaderFormats) GetIndicationHeaderFormat1() *E2SmRmetIndicationHeaderFormat1 {
	if x, ok := x.GetE2SmRmetIndicationHeader().(*IndicationHeaderFormats_IndicationHeaderFormat1); ok {
		return x.IndicationHeaderFormat1
	}
	return nil
}

type isIndicationHeaderFormats_E2SmRmetIndicationHeader interface {
	isIndicationHeaderFormats_E2SmRmetIndicationHeader()
}

type IndicationHeaderFormats_IndicationHeaderFormat1 struct {
	IndicationHeaderFormat1 *E2SmRmetIndicationHeaderFormat1 `protobuf:"bytes,1,opt,name=indication_header_format1,json=indicationHeader_Format1,proto3,oneof"`
}

func (*IndicationHeaderFormats_IndicationHeaderFormat1) isIndicationHeaderFormats_E2SmRmetIndicationHeader() {
}

// sequence from e2sm-rmet.asn1:297
// {E2SM-RMET-IndicationHeader-Format1}
type E2SmRmetIndicationHeaderFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColletStartTime   *TimeStamp        `protobuf:"bytes,1,opt,name=collet_start_time,json=colletStartTime,proto3" json:"collet_start_time,omitempty"`
	FileFormatversion *string           `protobuf:"bytes,2,opt,name=file_formatversion,json=fileFormatversion,proto3,oneof" json:"file_formatversion,omitempty"`
	SenderName        *string           `protobuf:"bytes,3,opt,name=sender_name,json=senderName,proto3,oneof" json:"sender_name,omitempty"`
	SenderType        *string           `protobuf:"bytes,4,opt,name=sender_type,json=senderType,proto3,oneof" json:"sender_type,omitempty"`
	VendorName        *string           `protobuf:"bytes,5,opt,name=vendor_name,json=vendorName,proto3,oneof" json:"vendor_name,omitempty"`
	RmetNodeId        *GlobalRmetnodeId `protobuf:"bytes,6,opt,name=rmet_node_id,json=rmetNodeID,proto3,oneof" json:"rmet_node_id,omitempty"`
}

func (x *E2SmRmetIndicationHeaderFormat1) Reset() {
	*x = E2SmRmetIndicationHeaderFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRmetIndicationHeaderFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRmetIndicationHeaderFormat1) ProtoMessage() {}

func (x *E2SmRmetIndicationHeaderFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRmetIndicationHeaderFormat1.ProtoReflect.Descriptor instead.
func (*E2SmRmetIndicationHeaderFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{54}
}

func (x *E2SmRmetIndicationHeaderFormat1) GetColletStartTime() *TimeStamp {
	if x != nil {
		return x.ColletStartTime
	}
	return nil
}

func (x *E2SmRmetIndicationHeaderFormat1) GetFileFormatversion() string {
	if x != nil && x.FileFormatversion != nil {
		return *x.FileFormatversion
	}
	return ""
}

func (x *E2SmRmetIndicationHeaderFormat1) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

func (x *E2SmRmetIndicationHeaderFormat1) GetSenderType() string {
	if x != nil && x.SenderType != nil {
		return *x.SenderType
	}
	return ""
}

func (x *E2SmRmetIndicationHeaderFormat1) GetVendorName() string {
	if x != nil && x.VendorName != nil {
		return *x.VendorName
	}
	return ""
}

func (x *E2SmRmetIndicationHeaderFormat1) GetRmetNodeId() *GlobalRmetnodeId {
	if x != nil {
		return x.RmetNodeId
	}
	return nil
}

// sequence from e2sm-rmet.asn1:314
// {E2SM-RMET-IndicationMessage}
type E2SmRmetIndicationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndicationMessageFormats *IndicationMessageFormats `protobuf:"bytes,1,opt,name=indication_message_formats,json=indicationMessage-formats,proto3" json:"indication_message_formats,omitempty"`
}

func (x *E2SmRmetIndicationMessage) Reset() {
	*x = E2SmRmetIndicationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRmetIndicationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRmetIndicationMessage) ProtoMessage() {}

func (x *E2SmRmetIndicationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRmetIndicationMessage.ProtoReflect.Descriptor instead.
func (*E2SmRmetIndicationMessage) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{55}
}

func (x *E2SmRmetIndicationMessage) GetIndicationMessageFormats() *IndicationMessageFormats {
	if x != nil {
		return x.IndicationMessageFormats
	}
	return nil
}

type IndicationMessageFormats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2SmRmetIndicationMessage:
	//	*IndicationMessageFormats_IndicationMessageFormat1
	E2SmRmetIndicationMessage isIndicationMessageFormats_E2SmRmetIndicationMessage `protobuf_oneof:"e2_sm_rmet_indication_message"`
}

func (x *IndicationMessageFormats) Reset() {
	*x = IndicationMessageFormats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicationMessageFormats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicationMessageFormats) ProtoMessage() {}

func (x *IndicationMessageFormats) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicationMessageFormats.ProtoReflect.Descriptor instead.
func (*IndicationMessageFormats) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{56}
}

func (m *IndicationMessageFormats) GetE2SmRmetIndicationMessage() isIndicationMessageFormats_E2SmRmetIndicationMessage {
	if m != nil {
		return m.E2SmRmetIndicationMessage
	}
	return nil
}

func (x *IndicationMessageFormats) GetIndicationMessageFormat1() *E2SmRmetIndicationMessageFormat1 {
	if x, ok := x.GetE2SmRmetIndicationMessage().(*IndicationMessageFormats_IndicationMessageFormat1); ok {
		return x.IndicationMessageFormat1
	}
	return nil
}

type isIndicationMessageFormats_E2SmRmetIndicationMessage interface {
	isIndicationMessageFormats_E2SmRmetIndicationMessage()
}

type IndicationMessageFormats_IndicationMessageFormat1 struct {
	// @inject_tag: aper:"valueExt,choiceIdx:1"
	IndicationMessageFormat1 *E2SmRmetIndicationMessageFormat1 `protobuf:"bytes,1,opt,name=indication_message_format1,json=indicationMessage_Format1,proto3,oneof"`
}

func (*IndicationMessageFormats_IndicationMessageFormat1) isIndicationMessageFormats_E2SmRmetIndicationMessage() {
}

// sequence from e2sm-rmet.asn1:319
// {E2SM-RMET-IndicationMessage-Format1}
type E2SmRmetIndicationMessageFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptId  *SubscriptionId      `protobuf:"bytes,1,opt,name=subscript_id,json=subscriptID,proto3" json:"subscript_id,omitempty"`
	CellObjId    *CellObjectId        `protobuf:"bytes,2,opt,name=cell_obj_id,json=cellObjID,proto3,oneof" json:"cell_obj_id,omitempty"`
	GranulPeriod *GranularityPeriod   `protobuf:"bytes,3,opt,name=granul_period,json=granulPeriod,proto3,oneof" json:"granul_period,omitempty"`
	MeasInfoList *MeasurementInfoList `protobuf:"bytes,4,opt,name=meas_info_list,json=measInfoList,proto3,oneof" json:"meas_info_list,omitempty"`
	MeasData     *MeasurementData     `protobuf:"bytes,5,opt,name=meas_data,json=measData,proto3" json:"meas_data,omitempty"`
}

func (x *E2SmRmetIndicationMessageFormat1) Reset() {
	*x = E2SmRmetIndicationMessageFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRmetIndicationMessageFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRmetIndicationMessageFormat1) ProtoMessage() {}

func (x *E2SmRmetIndicationMessageFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRmetIndicationMessageFormat1.ProtoReflect.Descriptor instead.
func (*E2SmRmetIndicationMessageFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{57}
}

func (x *E2SmRmetIndicationMessageFormat1) GetSubscriptId() *SubscriptionId {
	if x != nil {
		return x.SubscriptId
	}
	return nil
}

func (x *E2SmRmetIndicationMessageFormat1) GetCellObjId() *CellObjectId {
	if x != nil {
		return x.CellObjId
	}
	return nil
}

func (x *E2SmRmetIndicationMessageFormat1) GetGranulPeriod() *GranularityPeriod {
	if x != nil {
		return x.GranulPeriod
	}
	return nil
}

func (x *E2SmRmetIndicationMessageFormat1) GetMeasInfoList() *MeasurementInfoList {
	if x != nil {
		return x.MeasInfoList
	}
	return nil
}

func (x *E2SmRmetIndicationMessageFormat1) GetMeasData() *MeasurementData {
	if x != nil {
		return x.MeasData
	}
	return nil
}

// sequence from e2sm-rmet.asn1:332
// {E2SM-RMET-RANfunction-Description}
type E2SmRmetRanfunctionDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanFunctionName *RanfunctionName `protobuf:"bytes,1,opt,name=ran_function_name,json=ranFunction-Name,proto3" json:"ran_function_name,omitempty"`
	// @inject_tag: aper:""
	RicRmetNodeList []*RicRmetnodeItem `protobuf:"bytes,2,rep,name=ric_rmet_node_list,json=ric-RMET-Node-List,proto3" json:"ric_rmet_node_list,omitempty"`
	// @inject_tag: aper:""
	RicEventTriggerStyleList []*RicEventTriggerStyleItem `protobuf:"bytes,3,rep,name=ric_event_trigger_style_list,json=ric-EventTriggerStyle-List,proto3" json:"ric_event_trigger_style_list,omitempty"`
	// @inject_tag: aper:""
	RicReportStyleList []*RicReportStyleItem `protobuf:"bytes,4,rep,name=ric_report_style_list,json=ric-ReportStyle-List,proto3" json:"ric_report_style_list,omitempty"`
}

func (x *E2SmRmetRanfunctionDescription) Reset() {
	*x = E2SmRmetRanfunctionDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRmetRanfunctionDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRmetRanfunctionDescription) ProtoMessage() {}

func (x *E2SmRmetRanfunctionDescription) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRmetRanfunctionDescription.ProtoReflect.Descriptor instead.
func (*E2SmRmetRanfunctionDescription) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{58}
}

func (x *E2SmRmetRanfunctionDescription) GetRanFunctionName() *RanfunctionName {
	if x != nil {
		return x.RanFunctionName
	}
	return nil
}

func (x *E2SmRmetRanfunctionDescription) GetRicRmetNodeList() []*RicRmetnodeItem {
	if x != nil {
		return x.RicRmetNodeList
	}
	return nil
}

func (x *E2SmRmetRanfunctionDescription) GetRicEventTriggerStyleList() []*RicEventTriggerStyleItem {
	if x != nil {
		return x.RicEventTriggerStyleList
	}
	return nil
}

func (x *E2SmRmetRanfunctionDescription) GetRicReportStyleList() []*RicReportStyleItem {
	if x != nil {
		return x.RicReportStyleList
	}
	return nil
}

// sequence from e2sm-rmet.asn1:340
// {RIC-RMETNode-Item}
type RicRmetnodeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicRmetnodeType *GlobalRmetnodeId `protobuf:"bytes,1,opt,name=ric_rmetnode_type,json=ric-RMETNode-Type,proto3" json:"ric_rmetnode_type,omitempty"`
	// @inject_tag: aper:""
	CellMeasurementObjectList []*CellMeasurementObjectItem `protobuf:"bytes,2,rep,name=cell_measurement_object_list,json=cell-Measurement-Object-List,proto3" json:"cell_measurement_object_list,omitempty"`
}

func (x *RicRmetnodeItem) Reset() {
	*x = RicRmetnodeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicRmetnodeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicRmetnodeItem) ProtoMessage() {}

func (x *RicRmetnodeItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicRmetnodeItem.ProtoReflect.Descriptor instead.
func (*RicRmetnodeItem) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{59}
}

func (x *RicRmetnodeItem) GetRicRmetnodeType() *GlobalRmetnodeId {
	if x != nil {
		return x.RicRmetnodeType
	}
	return nil
}

func (x *RicRmetnodeItem) GetCellMeasurementObjectList() []*CellMeasurementObjectItem {
	if x != nil {
		return x.CellMeasurementObjectList
	}
	return nil
}

// sequence from e2sm-rmet.asn1:346
// {Cell-Measurement-Object-Item}
type CellMeasurementObjectItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellObjectId *CellObjectId `protobuf:"bytes,1,opt,name=cell_object_id,json=cell-object-ID,proto3" json:"cell_object_id,omitempty"`
	CellGlobalId *CellGlobalId `protobuf:"bytes,2,opt,name=cell_global_id,json=cell-global-ID,proto3" json:"cell_global_id,omitempty"`
}

func (x *CellMeasurementObjectItem) Reset() {
	*x = CellMeasurementObjectItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellMeasurementObjectItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellMeasurementObjectItem) ProtoMessage() {}

func (x *CellMeasurementObjectItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellMeasurementObjectItem.ProtoReflect.Descriptor instead.
func (*CellMeasurementObjectItem) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{60}
}

func (x *CellMeasurementObjectItem) GetCellObjectId() *CellObjectId {
	if x != nil {
		return x.CellObjectId
	}
	return nil
}

func (x *CellMeasurementObjectItem) GetCellGlobalId() *CellGlobalId {
	if x != nil {
		return x.CellGlobalId
	}
	return nil
}

// sequence from e2sm-rmet.asn1:352
// {RIC-EventTriggerStyle-Item}
type RicEventTriggerStyleItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicEventTriggerStyleType  *RicStyleType  `protobuf:"bytes,1,opt,name=ric_event_trigger_style_type,json=ric-EventTriggerStyle-Type,proto3" json:"ric_event_trigger_style_type,omitempty"`
	RicEventTriggerStyleName  *RicStyleName  `protobuf:"bytes,2,opt,name=ric_event_trigger_style_name,json=ric-EventTriggerStyle-Name,proto3" json:"ric_event_trigger_style_name,omitempty"`
	RicEventTriggerFormatType *RicFormatType `protobuf:"bytes,3,opt,name=ric_event_trigger_format_type,json=ric-EventTriggerFormat-Type,proto3" json:"ric_event_trigger_format_type,omitempty"`
}

func (x *RicEventTriggerStyleItem) Reset() {
	*x = RicEventTriggerStyleItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicEventTriggerStyleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicEventTriggerStyleItem) ProtoMessage() {}

func (x *RicEventTriggerStyleItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicEventTriggerStyleItem.ProtoReflect.Descriptor instead.
func (*RicEventTriggerStyleItem) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{61}
}

func (x *RicEventTriggerStyleItem) GetRicEventTriggerStyleType() *RicStyleType {
	if x != nil {
		return x.RicEventTriggerStyleType
	}
	return nil
}

func (x *RicEventTriggerStyleItem) GetRicEventTriggerStyleName() *RicStyleName {
	if x != nil {
		return x.RicEventTriggerStyleName
	}
	return nil
}

func (x *RicEventTriggerStyleItem) GetRicEventTriggerFormatType() *RicFormatType {
	if x != nil {
		return x.RicEventTriggerFormatType
	}
	return nil
}

// sequence from e2sm-rmet.asn1:359
// {RIC-ReportStyle-Item}
type RicReportStyleItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicReportStyleType             *RicStyleType              `protobuf:"bytes,1,opt,name=ric_report_style_type,json=ric-ReportStyle-Type,proto3" json:"ric_report_style_type,omitempty"`
	RicReportStyleName             *RicStyleName              `protobuf:"bytes,2,opt,name=ric_report_style_name,json=ric-ReportStyle-Name,proto3" json:"ric_report_style_name,omitempty"`
	RicActionFormatType            *RicFormatType             `protobuf:"bytes,3,opt,name=ric_action_format_type,json=ric-ActionFormat-Type,proto3" json:"ric_action_format_type,omitempty"`
	MeasInfoActionList             *MeasurementInfoActionList `protobuf:"bytes,4,opt,name=meas_info_action_list,json=measInfo-Action-List,proto3" json:"meas_info_action_list,omitempty"`
	RicIndicationHeaderFormatType  *RicFormatType             `protobuf:"bytes,5,opt,name=ric_indication_header_format_type,json=ric-IndicationHeaderFormat-Type,proto3" json:"ric_indication_header_format_type,omitempty"`
	RicIndicationMessageFormatType *RicFormatType             `protobuf:"bytes,6,opt,name=ric_indication_message_format_type,json=ric-IndicationMessageFormat-Type,proto3" json:"ric_indication_message_format_type,omitempty"`
}

func (x *RicReportStyleItem) Reset() {
	*x = RicReportStyleItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicReportStyleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicReportStyleItem) ProtoMessage() {}

func (x *RicReportStyleItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicReportStyleItem.ProtoReflect.Descriptor instead.
func (*RicReportStyleItem) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{62}
}

func (x *RicReportStyleItem) GetRicReportStyleType() *RicStyleType {
	if x != nil {
		return x.RicReportStyleType
	}
	return nil
}

func (x *RicReportStyleItem) GetRicReportStyleName() *RicStyleName {
	if x != nil {
		return x.RicReportStyleName
	}
	return nil
}

func (x *RicReportStyleItem) GetRicActionFormatType() *RicFormatType {
	if x != nil {
		return x.RicActionFormatType
	}
	return nil
}

func (x *RicReportStyleItem) GetMeasInfoActionList() *MeasurementInfoActionList {
	if x != nil {
		return x.MeasInfoActionList
	}
	return nil
}

func (x *RicReportStyleItem) GetRicIndicationHeaderFormatType() *RicFormatType {
	if x != nil {
		return x.RicIndicationHeaderFormatType
	}
	return nil
}

func (x *RicReportStyleItem) GetRicIndicationMessageFormatType() *RicFormatType {
	if x != nil {
		return x.RicIndicationMessageFormatType
	}
	return nil
}

//{RIC-Style-Name}
type RicStyleName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RicStyleName) Reset() {
	*x = RicStyleName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicStyleName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicStyleName) ProtoMessage() {}

func (x *RicStyleName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicStyleName.ProtoReflect.Descriptor instead.
func (*RicStyleName) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{63}
}

func (x *RicStyleName) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

//{CellObjectID}
type CellObjectId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeExt,sizeLB:0,sizeUB:400"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CellObjectId) Reset() {
	*x = CellObjectId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellObjectId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellObjectId) ProtoMessage() {}

func (x *CellObjectId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellObjectId.ProtoReflect.Descriptor instead.
func (*CellObjectId) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{64}
}

func (x *CellObjectId) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

//{MeasurementTypeName}
type MeasurementTypeName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MeasurementTypeName) Reset() {
	*x = MeasurementTypeName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementTypeName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementTypeName) ProtoMessage() {}

func (x *MeasurementTypeName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementTypeName.ProtoReflect.Descriptor instead.
func (*MeasurementTypeName) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{65}
}

func (x *MeasurementTypeName) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

//{UE-Identity}
type UeIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UeIdentity) Reset() {
	*x = UeIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeIdentity) ProtoMessage() {}

func (x *UeIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeIdentity.ProtoReflect.Descriptor instead.
func (*UeIdentity) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{66}
}

func (x *UeIdentity) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

//{PLMN-Identity}
type PlmnIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:3,sizeUB:3"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PlmnIdentity) Reset() {
	*x = PlmnIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlmnIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlmnIdentity) ProtoMessage() {}

func (x *PlmnIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlmnIdentity.ProtoReflect.Descriptor instead.
func (*PlmnIdentity) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{67}
}

func (x *PlmnIdentity) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

//{TimeStamp}
type TimeStamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:4,sizeUB:4"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TimeStamp) Reset() {
	*x = TimeStamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeStamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeStamp) ProtoMessage() {}

func (x *TimeStamp) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeStamp.ProtoReflect.Descriptor instead.
func (*TimeStamp) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{68}
}

func (x *TimeStamp) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

//{EUTRACellIdentity}
type EutracellIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:28,sizeUB:28"
	Value *asn1.BitString `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"` //28
}

func (x *EutracellIdentity) Reset() {
	*x = EutracellIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EutracellIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EutracellIdentity) ProtoMessage() {}

func (x *EutracellIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EutracellIdentity.ProtoReflect.Descriptor instead.
func (*EutracellIdentity) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{69}
}

func (x *EutracellIdentity) GetValue() *asn1.BitString {
	if x != nil {
		return x.Value
	}
	return nil
}

//{NRCellIdentity}
type NrcellIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:36,sizeUB:36"
	Value *asn1.BitString `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"` //36
}

func (x *NrcellIdentity) Reset() {
	*x = NrcellIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrcellIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrcellIdentity) ProtoMessage() {}

func (x *NrcellIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrcellIdentity.ProtoReflect.Descriptor instead.
func (*NrcellIdentity) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{70}
}

func (x *NrcellIdentity) GetValue() *asn1.BitString {
	if x != nil {
		return x.Value
	}
	return nil
}

//{MeasurementTypeName}
type Uetag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Uetag) Reset() {
	*x = Uetag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uetag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uetag) ProtoMessage() {}

func (x *Uetag) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uetag.ProtoReflect.Descriptor instead.
func (*Uetag) Descriptor() ([]byte, []int) {
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP(), []int{71}
}

func (x *Uetag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_e2sm_rmet_v1_e2sm_rmet_proto protoreflect.FileDescriptor

var file_e2sm_rmet_v1_e2sm_rmet_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61, 0x73, 0x6e, 0x31, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x01, 0x0a,
	0x08, 0x45, 0x75, 0x74, 0x72, 0x61, 0x63, 0x67, 0x69, 0x12, 0x41, 0x0a, 0x0e, 0x70, 0x5f, 0x6c,
	0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x70,
	0x4c, 0x4d, 0x4e, 0x2d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x13,
	0x65, 0x5f, 0x75, 0x74, 0x72, 0x61, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x75, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11, 0x65, 0x55, 0x54, 0x52,
	0x41, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x92, 0x01,
	0x0a, 0x05, 0x4e, 0x72, 0x63, 0x67, 0x69, 0x12, 0x41, 0x0a, 0x0e, 0x70, 0x5f, 0x6c, 0x6d, 0x6e,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x70, 0x4c, 0x4d,
	0x4e, 0x2d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x10, 0x6e, 0x5f,
	0x72, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x0e, 0x6e, 0x52, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x88, 0x01, 0x0a, 0x0c, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x6e, 0x72, 0x5f, 0x63, 0x67, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x72, 0x63, 0x67, 0x69, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x72, 0x2d, 0x43,
	0x47, 0x49, 0x12, 0x37, 0x0a, 0x0a, 0x65, 0x5f, 0x75, 0x74, 0x72, 0x61, 0x5f, 0x63, 0x67, 0x69,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d,
	0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x75, 0x74, 0x72, 0x61, 0x63, 0x67, 0x69, 0x48, 0x00,
	0x52, 0x09, 0x65, 0x55, 0x54, 0x52, 0x41, 0x2d, 0x43, 0x47, 0x49, 0x42, 0x10, 0x0a, 0x0e, 0x63,
	0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x4b, 0x0a,
	0x06, 0x53, 0x6e, 0x73, 0x73, 0x61, 0x69, 0x12, 0x1a, 0x0a, 0x04, 0x73, 0x5f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x01, 0x52, 0x03,
	0x73, 0x53, 0x54, 0x12, 0x1d, 0x0a, 0x03, 0x73, 0x5f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x03, 0x48, 0x00, 0x52, 0x02, 0x73, 0x44, 0x88,
	0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x5f, 0x64, 0x22, 0x2a, 0x0a, 0x06, 0x46, 0x69,
	0x76, 0x65, 0x51, 0x69, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x01, 0x28, 0x00, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x27, 0x0a, 0x03, 0x51, 0x63, 0x69, 0x12, 0x20, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x1a, 0x05, 0x18, 0xff, 0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x26, 0x0a, 0x03, 0x41, 0x72, 0x70, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x0f, 0x28, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x11, 0x47, 0x72, 0x61, 0x6e, 0x75,
	0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x23, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a,
	0x22, 0x08, 0x18, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xa3, 0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6d,
	0x65, 0x61, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x65, 0x61,
	0x73, 0x49, 0x44, 0x42, 0x12, 0x0a, 0x10, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x36, 0x0a, 0x11, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08,
	0x1a, 0x06, 0x18, 0x80, 0x80, 0x04, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x35, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x28, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x98, 0x02, 0x0a, 0x10, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x52, 0x6d, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x67,
	0x5f, 0x6e, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52,
	0x6d, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x03,
	0x67, 0x4e, 0x42, 0x12, 0x3e, 0x0a, 0x07, 0x65, 0x6e, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x6d, 0x65, 0x74, 0x6e, 0x6f,
	0x64, 0x65, 0x45, 0x6e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x06, 0x65, 0x6e, 0x2d,
	0x67, 0x4e, 0x42, 0x12, 0x3e, 0x0a, 0x07, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x6d, 0x65, 0x74, 0x6e, 0x6f,
	0x64, 0x65, 0x4e, 0x67, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x67, 0x2d,
	0x65, 0x4e, 0x42, 0x12, 0x36, 0x0a, 0x04, 0x65, 0x5f, 0x6e, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x6d, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x45,
	0x6e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x03, 0x65, 0x4e, 0x42, 0x42, 0x14, 0x0a, 0x12, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x22, 0xf6, 0x01, 0x0a, 0x13, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x6d, 0x65, 0x74,
	0x6e, 0x6f, 0x64, 0x65, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x67, 0x4e, 0x62, 0x49, 0x64, 0x52, 0x0d, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x0d, 0x67,
	0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x70, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x67,
	0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x55, 0x50, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x39,
	0x0a, 0x0a, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64, 0x48, 0x01, 0x52, 0x09, 0x67, 0x4e, 0x42,
	0x2d, 0x44, 0x55, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x67, 0x5f,
	0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x22, 0x76, 0x0a, 0x0b, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x67, 0x4e, 0x62, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x70, 0x6c, 0x6d,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x70, 0x6c, 0x6d, 0x6e, 0x2d, 0x69, 0x64, 0x12,
	0x31, 0x0a, 0x06, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6e, 0x62, 0x49, 0x64, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x06, 0x67, 0x6e, 0x62, 0x2d,
	0x69, 0x64, 0x22, 0x31, 0x0a, 0x09, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x70, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e,
	0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x28, 0x00, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x07, 0x47, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x28, 0x00, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4c, 0x0a, 0x0b, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x67, 0x6e, 0x62,
	0x2d, 0x49, 0x44, 0x42, 0x0f, 0x0a, 0x0d, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x22, 0xfa, 0x01, 0x0a, 0x15, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52,
	0x6d, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x42,
	0x0a, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d,
	0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x47, 0x6e,
	0x62, 0x49, 0x64, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x67, 0x4e, 0x42, 0x2d,
	0x49, 0x44, 0x12, 0x41, 0x0a, 0x0d, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x70,
	0x49, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x55, 0x50, 0x2d,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64,
	0x48, 0x01, 0x52, 0x09, 0x67, 0x4e, 0x42, 0x2d, 0x44, 0x55, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69,
	0x64, 0x22, 0x82, 0x01, 0x0a, 0x0d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x47, 0x6e,
	0x62, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x70, 0x4c, 0x4d, 0x4e, 0x2d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x07, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x52, 0x06,
	0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x22, 0x44, 0x0a, 0x07, 0x45, 0x6e, 0x67, 0x6e, 0x62, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x07, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44,
	0x42, 0x0a, 0x0a, 0x08, 0x65, 0x6e, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x22, 0xab, 0x01, 0x0a,
	0x15, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x6d, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x4e,
	0x67, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x5f, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x6e, 0x67, 0x65, 0x4e, 0x62, 0x49, 0x64, 0x52, 0x10,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x6e, 0x67, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44,
	0x12, 0x39, 0x0a, 0x0a, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64, 0x48, 0x00, 0x52, 0x09, 0x67,
	0x4e, 0x42, 0x2d, 0x44, 0x55, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x22, 0x80, 0x02, 0x0a, 0x0d, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x6e, 0x67, 0x65, 0x4e, 0x62, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x07,
	0x70, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x70, 0x6c, 0x6d, 0x6e, 0x2d,
	0x69, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x06, 0x65,
	0x6e, 0x62, 0x2d, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x13, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6d,
	0x61, 0x63, 0x72, 0x6f, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x2d, 0x4d, 0x61,
	0x63, 0x72, 0x6f, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x12, 0x6c, 0x6f,
	0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x6c, 0x6f, 0x6e, 0x67,
	0x2d, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x22, 0xde, 0x01,
	0x0a, 0x0b, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a,
	0x0c, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x6e, 0x62, 0x2d, 0x49,
	0x44, 0x2d, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x12, 0x42, 0x0a, 0x11, 0x65, 0x6e, 0x62, 0x5f, 0x69,
	0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x11, 0x65, 0x6e, 0x62, 0x2d, 0x49, 0x44,
	0x2d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x12, 0x40, 0x0a, 0x10, 0x65,
	0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x10, 0x65, 0x6e, 0x62,
	0x2d, 0x49, 0x44, 0x2d, 0x6c, 0x6f, 0x6e, 0x67, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x42, 0x0f, 0x0a,
	0x0d, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x57,
	0x0a, 0x13, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x6d, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65,
	0x45, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f,
	0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x22, 0x7e, 0x0a, 0x0b, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x6d, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x70, 0x4c, 0x4d, 0x4e,
	0x2d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x07, 0x65, 0x5f, 0x6e,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x52,
	0x06, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x22, 0x85, 0x01, 0x0a, 0x05, 0x45, 0x6e, 0x62, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0d, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0c,
	0x6d, 0x61, 0x63, 0x72, 0x6f, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x0c,
	0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x68, 0x6f, 0x6d, 0x65, 0x2d, 0x65,
	0x4e, 0x42, 0x2d, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x22,
	0xb2, 0x02, 0x0a, 0x0f, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x17, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01,
	0x52, 0x15, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x16, 0x72, 0x61, 0x6e, 0x5f, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x6f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xe8, 0x07, 0x52, 0x14, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2d, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4f, 0x49, 0x44, 0x12, 0x45, 0x0a, 0x18, 0x72, 0x61, 0x6e,
	0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x17, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x38, 0x0a, 0x15, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x14, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x72,
	0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x22, 0x24, 0x0a, 0x0c, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x52, 0x69,
	0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x32, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x52, 0x6d, 0x65, 0x74,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66,
	0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0x80, 0x80, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f,
	0x66, 0x52, 0x69, 0x63, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x16, 0x4d, 0x61, 0x78,
	0x6e, 0x6f, 0x6f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0x80, 0x80, 0x04, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0x80, 0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x3c, 0x0a, 0x17, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08,
	0x1a, 0x06, 0x08, 0xff, 0xff, 0xff, 0xff, 0x07, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x2a, 0x0a, 0x07, 0x4d, 0x61, 0x78, 0x6f, 0x66, 0x55, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04,
	0x08, 0x80, 0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2b, 0x0a, 0x04, 0x55,
	0x65, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0x80, 0x80, 0x80, 0x80, 0x10, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6d, 0x0a, 0x06, 0x55, 0x65, 0x69, 0x74,
	0x65, 0x6d, 0x12, 0x27, 0x0a, 0x05, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x65, 0x69, 0x64, 0x52, 0x04, 0x75, 0x65, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x06, 0x75,
	0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x74, 0x61, 0x67,
	0x48, 0x00, 0x52, 0x05, 0x75, 0x65, 0x54, 0x61, 0x67, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x75, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x22, 0x34, 0x0a, 0x06, 0x55, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x65, 0x69, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4e, 0x0a,
	0x13, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x51, 0x0a,
	0x13, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x61, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x48, 0x0a, 0x0f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x11, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x27, 0x0a, 0x05, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x65, 0x69, 0x64, 0x52, 0x04, 0x75, 0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x06, 0x75, 0x65, 0x5f,
	0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x74, 0x61, 0x67, 0x52, 0x05,
	0x75, 0x65, 0x54, 0x61, 0x67, 0x12, 0x4d, 0x0a, 0x10, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x6d, 0x65, 0x61, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a,
	0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x72, 0x65,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x04, 0x72, 0x65, 0x61, 0x6c,
	0x12, 0x1b, 0x0a, 0x08, 0x6e, 0x6f, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x6f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x19, 0x0a,
	0x17, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x5a, 0x0a, 0x19, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x19, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x3e, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x61, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x65, 0x61, 0x73, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x22, 0x88, 0x01,
	0x0a, 0x1e, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x6d, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x66, 0x0a, 0x18, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52,
	0x17, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x1d, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x70, 0x0a, 0x18, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d,
	0x52, 0x6d, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x31, 0x48, 0x00, 0x52, 0x17, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x25, 0x0a, 0x23,
	0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x25, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x6d, 0x65, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x29, 0x0a, 0x10,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x18, 0x45, 0x32, 0x53, 0x6d,
	0x52, 0x6d, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0e, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x72, 0x69, 0x63, 0x2d, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x62, 0x0a, 0x19, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x73, 0x52, 0x18, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x22, 0xa7, 0x01, 0x0a,
	0x17, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x6c, 0x0a, 0x19, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x52,
	0x6d, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x18, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x1e, 0x0a, 0x1c, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f,
	0x72, 0x6d, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xad, 0x02, 0x0a, 0x1f, 0x45, 0x32, 0x53, 0x6d, 0x52,
	0x6d, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x3a, 0x0a, 0x0b, 0x63, 0x65,
	0x6c, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x65, 0x6c, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x09, 0x63, 0x65, 0x6c,
	0x6c, 0x4f, 0x62, 0x6a, 0x49, 0x44, 0x12, 0x47, 0x0a, 0x0e, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x44, 0x0a, 0x0d, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d,
	0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0c, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x49, 0x44, 0x22, 0x7e, 0x0a, 0x18, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x6d,
	0x65, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x62, 0x0a, 0x19, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x18, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2d, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x17, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x73, 0x12, 0x6c, 0x0a, 0x19, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x6d, 0x65, 0x74, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x18, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31,
	0x42, 0x1e, 0x0a, 0x1c, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x22, 0xd8, 0x03, 0x0a, 0x1f, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x6d, 0x65, 0x74, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x31, 0x12, 0x43, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x12, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x00, 0x18, 0x0f,
	0x48, 0x00, 0x52, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x00, 0x18, 0x90, 0x03, 0x48, 0x01, 0x52, 0x0a, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x0b, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x00, 0x18, 0x08, 0x48, 0x02, 0x52, 0x0a, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x0b, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x00, 0x18, 0x20, 0x48, 0x03, 0x52, 0x0a, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0c,
	0x72, 0x6d, 0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x6d, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x48, 0x04, 0x52, 0x0a, 0x72, 0x6d, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72,
	0x6d, 0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x19,
	0x45, 0x32, 0x53, 0x6d, 0x52, 0x6d, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x65, 0x0a, 0x1a, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x19, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73,
	0x22, 0xac, 0x01, 0x0a, 0x18, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x6f, 0x0a,
	0x1a, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x6d, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x31, 0x48, 0x00, 0x52, 0x19, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x1f,
	0x0a, 0x1d, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xae, 0x03, 0x0a, 0x20, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x6d, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x31, 0x12, 0x3f, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x49, 0x44, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6f, 0x62,
	0x6a, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52, 0x09, 0x63, 0x65, 0x6c, 0x6c, 0x4f, 0x62,
	0x6a, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x0d, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c,
	0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61,
	0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x48, 0x01,
	0x52, 0x0c, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x4c, 0x0a, 0x0e, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x02, 0x52, 0x0c,
	0x6d, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x3a, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x61, 0x73, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xa1, 0x03, 0x0a, 0x1e, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x6d, 0x65, 0x74, 0x52, 0x61, 0x6e,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x11, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61,
	0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x10, 0x72,
	0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x5a, 0x0a, 0x12, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x52, 0x6d,
	0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92,
	0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x08, 0x52, 0x12, 0x72, 0x69, 0x63, 0x2d, 0x52, 0x4d, 0x45,
	0x54, 0x2d, 0x4e, 0x6f, 0x64, 0x65, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x74, 0x0a, 0x1c, 0x72,
	0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01,
	0x04, 0x08, 0x01, 0x10, 0x3f, 0x52, 0x1a, 0x72, 0x69, 0x63, 0x2d, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x61, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x3f, 0x52, 0x14,
	0x72, 0x69, 0x63, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0xda, 0x01, 0x0a, 0x0f, 0x52, 0x69, 0x63, 0x52, 0x6d, 0x65, 0x74,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x4c, 0x0a, 0x11, 0x72, 0x69, 0x63, 0x5f,
	0x72, 0x6d, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x6d, 0x65, 0x74, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x52, 0x11, 0x72, 0x69, 0x63, 0x2d, 0x52, 0x4d, 0x45, 0x54, 0x4e, 0x6f, 0x64,
	0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x79, 0x0a, 0x1c, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x01, 0x10,
	0x80, 0x80, 0x01, 0x52, 0x1c, 0x63, 0x65, 0x6c, 0x6c, 0x2d, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xa3, 0x01, 0x0a, 0x19, 0x43, 0x65, 0x6c, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x42, 0x0a, 0x0e, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x52, 0x0e, 0x63, 0x65, 0x6c, 0x6c, 0x2d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x2d, 0x49, 0x44, 0x12, 0x42, 0x0a, 0x0e, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x0e, 0x63, 0x65, 0x6c, 0x6c, 0x2d, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x49, 0x44, 0x22, 0xb7, 0x02, 0x0a, 0x18, 0x52, 0x69, 0x63, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x5c, 0x0a, 0x1c, 0x72, 0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1a, 0x72, 0x69, 0x63, 0x2d, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x5c, 0x0a, 0x1c, 0x72, 0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x1a, 0x72, 0x69, 0x63, 0x2d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x5f, 0x0a, 0x1d, 0x72, 0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x1b, 0x72, 0x69, 0x63, 0x2d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2d, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xbc, 0x04, 0x0a, 0x12, 0x52, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x4f, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x14, 0x72, 0x69, 0x63, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4f, 0x0a, 0x15, 0x72, 0x69, 0x63,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x14, 0x72, 0x69, 0x63, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x16, 0x72, 0x69,
	0x63, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x15, 0x72, 0x69, 0x63, 0x2d, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5c,
	0x0a, 0x15, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x14, 0x6d, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x2d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x21,
	0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x1f, 0x72, 0x69, 0x63, 0x2d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x2d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x69, 0x0a, 0x22, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x20,
	0x72, 0x69, 0x63, 0x2d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2d, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x30, 0x0a, 0x0c, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x30, 0x0a, 0x0c, 0x43, 0x65, 0x6c, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x00, 0x18, 0x90, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x13, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x22, 0x0a,
	0x0a, 0x55, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2a, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x7a, 0x02, 0x68, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x11,
	0x45, 0x75, 0x74, 0x72, 0x61, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x0e, 0x4e,
	0x72, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x29, 0x0a, 0x05, 0x55, 0x65, 0x74, 0x61, 0x67,
	0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6f, 0x6e, 0x6f,
	0x73, 0x2d, 0x65, 0x32, 0x2d, 0x73, 0x6d, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x6d, 0x65, 0x74, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x32, 0x73, 0x6d, 0x2d, 0x72, 0x6d, 0x65, 0x74, 0x2d, 0x67, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescOnce sync.Once
	file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescData = file_e2sm_rmet_v1_e2sm_rmet_proto_rawDesc
)

func file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescGZIP() []byte {
	file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescOnce.Do(func() {
		file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescData = protoimpl.X.CompressGZIP(file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescData)
	})
	return file_e2sm_rmet_v1_e2sm_rmet_proto_rawDescData
}

var file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes = make([]protoimpl.MessageInfo, 72)
var file_e2sm_rmet_v1_e2sm_rmet_proto_goTypes = []interface{}{
	(*Eutracgi)(nil),                              // 0: e2sm_rmet.v1.Eutracgi
	(*Nrcgi)(nil),                                 // 1: e2sm_rmet.v1.Nrcgi
	(*CellGlobalId)(nil),                          // 2: e2sm_rmet.v1.CellGlobalId
	(*Snssai)(nil),                                // 3: e2sm_rmet.v1.Snssai
	(*FiveQi)(nil),                                // 4: e2sm_rmet.v1.FiveQi
	(*Qci)(nil),                                   // 5: e2sm_rmet.v1.Qci
	(*Arp)(nil),                                   // 6: e2sm_rmet.v1.Arp
	(*GranularityPeriod)(nil),                     // 7: e2sm_rmet.v1.GranularityPeriod
	(*MeasurementType)(nil),                       // 8: e2sm_rmet.v1.MeasurementType
	(*MeasurementTypeId)(nil),                     // 9: e2sm_rmet.v1.MeasurementTypeId
	(*SubscriptionId)(nil),                        // 10: e2sm_rmet.v1.SubscriptionId
	(*GlobalRmetnodeId)(nil),                      // 11: e2sm_rmet.v1.GlobalRmetnodeId
	(*GlobalRmetnodeGnbId)(nil),                   // 12: e2sm_rmet.v1.GlobalRmetnodeGnbId
	(*GlobalgNbId)(nil),                           // 13: e2sm_rmet.v1.GlobalgNbId
	(*GnbCuUpId)(nil),                             // 14: e2sm_rmet.v1.GnbCuUpId
	(*GnbDuId)(nil),                               // 15: e2sm_rmet.v1.GnbDuId
	(*GnbIdChoice)(nil),                           // 16: e2sm_rmet.v1.GnbIdChoice
	(*GlobalRmetnodeEnGnbId)(nil),                 // 17: e2sm_rmet.v1.GlobalRmetnodeEnGnbId
	(*GlobalenGnbId)(nil),                         // 18: e2sm_rmet.v1.GlobalenGnbId
	(*EngnbId)(nil),                               // 19: e2sm_rmet.v1.EngnbId
	(*GlobalRmetnodeNgEnbId)(nil),                 // 20: e2sm_rmet.v1.GlobalRmetnodeNgEnbId
	(*GlobalngeNbId)(nil),                         // 21: e2sm_rmet.v1.GlobalngeNbId
	(*EnbIdChoice)(nil),                           // 22: e2sm_rmet.v1.EnbIdChoice
	(*GlobalRmetnodeEnbId)(nil),                   // 23: e2sm_rmet.v1.GlobalRmetnodeEnbId
	(*GlobalEnbId)(nil),                           // 24: e2sm_rmet.v1.GlobalEnbId
	(*EnbId)(nil),                                 // 25: e2sm_rmet.v1.EnbId
	(*RanfunctionName)(nil),                       // 26: e2sm_rmet.v1.RanfunctionName
	(*RicStyleType)(nil),                          // 27: e2sm_rmet.v1.RicStyleType
	(*RicFormatType)(nil),                         // 28: e2sm_rmet.v1.RicFormatType
	(*MaxnoofRmetnodes)(nil),                      // 29: e2sm_rmet.v1.MaxnoofRmetnodes
	(*MaxnoofCells)(nil),                          // 30: e2sm_rmet.v1.MaxnoofCells
	(*MaxnoofRicstyles)(nil),                      // 31: e2sm_rmet.v1.MaxnoofRicstyles
	(*MaxnoofMeasurementInfo)(nil),                // 32: e2sm_rmet.v1.MaxnoofMeasurementInfo
	(*MaxnoofMeasurementRecord)(nil),              // 33: e2sm_rmet.v1.MaxnoofMeasurementRecord
	(*MaxnoofMeasurementValue)(nil),               // 34: e2sm_rmet.v1.MaxnoofMeasurementValue
	(*MaxofUe)(nil),                               // 35: e2sm_rmet.v1.MaxofUe
	(*Ueid)(nil),                                  // 36: e2sm_rmet.v1.Ueid
	(*Ueitem)(nil),                                // 37: e2sm_rmet.v1.Ueitem
	(*Uelist)(nil),                                // 38: e2sm_rmet.v1.Uelist
	(*MeasurementInfoList)(nil),                   // 39: e2sm_rmet.v1.MeasurementInfoList
	(*MeasurementInfoItem)(nil),                   // 40: e2sm_rmet.v1.MeasurementInfoItem
	(*MeasurementData)(nil),                       // 41: e2sm_rmet.v1.MeasurementData
	(*MeasurementRecord)(nil),                     // 42: e2sm_rmet.v1.MeasurementRecord
	(*MeasurementRecordItem)(nil),                 // 43: e2sm_rmet.v1.MeasurementRecordItem
	(*MeasurementInfoActionList)(nil),             // 44: e2sm_rmet.v1.MeasurementInfoActionList
	(*MeasurementInfoActionItem)(nil),             // 45: e2sm_rmet.v1.MeasurementInfoActionItem
	(*E2SmRmetEventTriggerDefinition)(nil),        // 46: e2sm_rmet.v1.E2SmRmetEventTriggerDefinition
	(*EventTriggerDefinitionFormats)(nil),         // 47: e2sm_rmet.v1.EventTriggerDefinitionFormats
	(*E2SmRmetEventTriggerDefinitionFormat1)(nil), // 48: e2sm_rmet.v1.E2SmRmetEventTriggerDefinitionFormat1
	(*E2SmRmetActionDefinition)(nil),              // 49: e2sm_rmet.v1.E2SmRmetActionDefinition
	(*ActionDefinitionFormats)(nil),               // 50: e2sm_rmet.v1.ActionDefinitionFormats
	(*E2SmRmetActionDefinitionFormat1)(nil),       // 51: e2sm_rmet.v1.E2SmRmetActionDefinitionFormat1
	(*E2SmRmetIndicationHeader)(nil),              // 52: e2sm_rmet.v1.E2SmRmetIndicationHeader
	(*IndicationHeaderFormats)(nil),               // 53: e2sm_rmet.v1.IndicationHeaderFormats
	(*E2SmRmetIndicationHeaderFormat1)(nil),       // 54: e2sm_rmet.v1.E2SmRmetIndicationHeaderFormat1
	(*E2SmRmetIndicationMessage)(nil),             // 55: e2sm_rmet.v1.E2SmRmetIndicationMessage
	(*IndicationMessageFormats)(nil),              // 56: e2sm_rmet.v1.IndicationMessageFormats
	(*E2SmRmetIndicationMessageFormat1)(nil),      // 57: e2sm_rmet.v1.E2SmRmetIndicationMessageFormat1
	(*E2SmRmetRanfunctionDescription)(nil),        // 58: e2sm_rmet.v1.E2SmRmetRanfunctionDescription
	(*RicRmetnodeItem)(nil),                       // 59: e2sm_rmet.v1.RicRmetnodeItem
	(*CellMeasurementObjectItem)(nil),             // 60: e2sm_rmet.v1.CellMeasurementObjectItem
	(*RicEventTriggerStyleItem)(nil),              // 61: e2sm_rmet.v1.RicEventTriggerStyleItem
	(*RicReportStyleItem)(nil),                    // 62: e2sm_rmet.v1.RicReportStyleItem
	(*RicStyleName)(nil),                          // 63: e2sm_rmet.v1.RicStyleName
	(*CellObjectId)(nil),                          // 64: e2sm_rmet.v1.CellObjectId
	(*MeasurementTypeName)(nil),                   // 65: e2sm_rmet.v1.MeasurementTypeName
	(*UeIdentity)(nil),                            // 66: e2sm_rmet.v1.UeIdentity
	(*PlmnIdentity)(nil),                          // 67: e2sm_rmet.v1.PlmnIdentity
	(*TimeStamp)(nil),                             // 68: e2sm_rmet.v1.TimeStamp
	(*EutracellIdentity)(nil),                     // 69: e2sm_rmet.v1.EutracellIdentity
	(*NrcellIdentity)(nil),                        // 70: e2sm_rmet.v1.NrcellIdentity
	(*Uetag)(nil),                                 // 71: e2sm_rmet.v1.Uetag
	(*asn1.BitString)(nil),                        // 72: asn1.v1.BitString
}
var file_e2sm_rmet_v1_e2sm_rmet_proto_depIdxs = []int32{
	67, // 0: e2sm_rmet.v1.Eutracgi.p_lmn_identity:type_name -> e2sm_rmet.v1.PlmnIdentity
	69, // 1: e2sm_rmet.v1.Eutracgi.e_utracell_identity:type_name -> e2sm_rmet.v1.EutracellIdentity
	67, // 2: e2sm_rmet.v1.Nrcgi.p_lmn_identity:type_name -> e2sm_rmet.v1.PlmnIdentity
	70, // 3: e2sm_rmet.v1.Nrcgi.n_rcell_identity:type_name -> e2sm_rmet.v1.NrcellIdentity
	1,  // 4: e2sm_rmet.v1.CellGlobalId.nr_cgi:type_name -> e2sm_rmet.v1.Nrcgi
	0,  // 5: e2sm_rmet.v1.CellGlobalId.e_utra_cgi:type_name -> e2sm_rmet.v1.Eutracgi
	65, // 6: e2sm_rmet.v1.MeasurementType.meas_name:type_name -> e2sm_rmet.v1.MeasurementTypeName
	9,  // 7: e2sm_rmet.v1.MeasurementType.meas_id:type_name -> e2sm_rmet.v1.MeasurementTypeId
	12, // 8: e2sm_rmet.v1.GlobalRmetnodeId.g_nb:type_name -> e2sm_rmet.v1.GlobalRmetnodeGnbId
	17, // 9: e2sm_rmet.v1.GlobalRmetnodeId.en_g_nb:type_name -> e2sm_rmet.v1.GlobalRmetnodeEnGnbId
	20, // 10: e2sm_rmet.v1.GlobalRmetnodeId.ng_e_nb:type_name -> e2sm_rmet.v1.GlobalRmetnodeNgEnbId
	23, // 11: e2sm_rmet.v1.GlobalRmetnodeId.e_nb:type_name -> e2sm_rmet.v1.GlobalRmetnodeEnbId
	13, // 12: e2sm_rmet.v1.GlobalRmetnodeGnbId.global_g_nb_id:type_name -> e2sm_rmet.v1.GlobalgNbId
	14, // 13: e2sm_rmet.v1.GlobalRmetnodeGnbId.g_nb_cu_up_id:type_name -> e2sm_rmet.v1.GnbCuUpId
	15, // 14: e2sm_rmet.v1.GlobalRmetnodeGnbId.g_nb_du_id:type_name -> e2sm_rmet.v1.GnbDuId
	67, // 15: e2sm_rmet.v1.GlobalgNbId.plmn_id:type_name -> e2sm_rmet.v1.PlmnIdentity
	16, // 16: e2sm_rmet.v1.GlobalgNbId.gnb_id:type_name -> e2sm_rmet.v1.GnbIdChoice
	72, // 17: e2sm_rmet.v1.GnbIdChoice.gnb_id:type_name -> asn1.v1.BitString
	18, // 18: e2sm_rmet.v1.GlobalRmetnodeEnGnbId.global_g_nb_id:type_name -> e2sm_rmet.v1.GlobalenGnbId
	14, // 19: e2sm_rmet.v1.GlobalRmetnodeEnGnbId.g_nb_cu_up_id:type_name -> e2sm_rmet.v1.GnbCuUpId
	15, // 20: e2sm_rmet.v1.GlobalRmetnodeEnGnbId.g_nb_du_id:type_name -> e2sm_rmet.v1.GnbDuId
	67, // 21: e2sm_rmet.v1.GlobalenGnbId.p_lmn_identity:type_name -> e2sm_rmet.v1.PlmnIdentity
	19, // 22: e2sm_rmet.v1.GlobalenGnbId.g_nb_id:type_name -> e2sm_rmet.v1.EngnbId
	72, // 23: e2sm_rmet.v1.EngnbId.g_nb_id:type_name -> asn1.v1.BitString
	21, // 24: e2sm_rmet.v1.GlobalRmetnodeNgEnbId.global_ng_e_nb_id:type_name -> e2sm_rmet.v1.GlobalngeNbId
	15, // 25: e2sm_rmet.v1.GlobalRmetnodeNgEnbId.g_nb_du_id:type_name -> e2sm_rmet.v1.GnbDuId
	67, // 26: e2sm_rmet.v1.GlobalngeNbId.plmn_id:type_name -> e2sm_rmet.v1.PlmnIdentity
	22, // 27: e2sm_rmet.v1.GlobalngeNbId.enb_id:type_name -> e2sm_rmet.v1.EnbIdChoice
	72, // 28: e2sm_rmet.v1.GlobalngeNbId.short_macro_e_nb_id:type_name -> asn1.v1.BitString
	72, // 29: e2sm_rmet.v1.GlobalngeNbId.long_macro_e_nb_id:type_name -> asn1.v1.BitString
	72, // 30: e2sm_rmet.v1.EnbIdChoice.enb_id_macro:type_name -> asn1.v1.BitString
	72, // 31: e2sm_rmet.v1.EnbIdChoice.enb_id_shortmacro:type_name -> asn1.v1.BitString
	72, // 32: e2sm_rmet.v1.EnbIdChoice.enb_id_longmacro:type_name -> asn1.v1.BitString
	24, // 33: e2sm_rmet.v1.GlobalRmetnodeEnbId.global_e_nb_id:type_name -> e2sm_rmet.v1.GlobalEnbId
	67, // 34: e2sm_rmet.v1.GlobalEnbId.p_lmn_identity:type_name -> e2sm_rmet.v1.PlmnIdentity
	25, // 35: e2sm_rmet.v1.GlobalEnbId.e_nb_id:type_name -> e2sm_rmet.v1.EnbId
	72, // 36: e2sm_rmet.v1.EnbId.macro_e_nb_id:type_name -> asn1.v1.BitString
	72, // 37: e2sm_rmet.v1.EnbId.home_e_nb_id:type_name -> asn1.v1.BitString
	36, // 38: e2sm_rmet.v1.Ueitem.ue_id:type_name -> e2sm_rmet.v1.Ueid
	71, // 39: e2sm_rmet.v1.Ueitem.ue_tag:type_name -> e2sm_rmet.v1.Uetag
	37, // 40: e2sm_rmet.v1.Uelist.value:type_name -> e2sm_rmet.v1.Ueitem
	40, // 41: e2sm_rmet.v1.MeasurementInfoList.value:type_name -> e2sm_rmet.v1.MeasurementInfoItem
	8,  // 42: e2sm_rmet.v1.MeasurementInfoItem.meas_type:type_name -> e2sm_rmet.v1.MeasurementType
	42, // 43: e2sm_rmet.v1.MeasurementData.value:type_name -> e2sm_rmet.v1.MeasurementRecord
	36, // 44: e2sm_rmet.v1.MeasurementRecord.ue_id:type_name -> e2sm_rmet.v1.Ueid
	71, // 45: e2sm_rmet.v1.MeasurementRecord.ue_tag:type_name -> e2sm_rmet.v1.Uetag
	43, // 46: e2sm_rmet.v1.MeasurementRecord.meas_record_item:type_name -> e2sm_rmet.v1.MeasurementRecordItem
	45, // 47: e2sm_rmet.v1.MeasurementInfoActionList.value:type_name -> e2sm_rmet.v1.MeasurementInfoActionItem
	65, // 48: e2sm_rmet.v1.MeasurementInfoActionItem.meas_name:type_name -> e2sm_rmet.v1.MeasurementTypeName
	9,  // 49: e2sm_rmet.v1.MeasurementInfoActionItem.meas_id:type_name -> e2sm_rmet.v1.MeasurementTypeId
	47, // 50: e2sm_rmet.v1.E2SmRmetEventTriggerDefinition.event_definition_formats:type_name -> e2sm_rmet.v1.EventTriggerDefinitionFormats
	48, // 51: e2sm_rmet.v1.EventTriggerDefinitionFormats.event_definition_format1:type_name -> e2sm_rmet.v1.E2SmRmetEventTriggerDefinitionFormat1
	27, // 52: e2sm_rmet.v1.E2SmRmetActionDefinition.ric_style_type:type_name -> e2sm_rmet.v1.RicStyleType
	50, // 53: e2sm_rmet.v1.E2SmRmetActionDefinition.action_definition_formats:type_name -> e2sm_rmet.v1.ActionDefinitionFormats
	51, // 54: e2sm_rmet.v1.ActionDefinitionFormats.action_definition_format1:type_name -> e2sm_rmet.v1.E2SmRmetActionDefinitionFormat1
	64, // 55: e2sm_rmet.v1.E2SmRmetActionDefinitionFormat1.cell_obj_id:type_name -> e2sm_rmet.v1.CellObjectId
	39, // 56: e2sm_rmet.v1.E2SmRmetActionDefinitionFormat1.meas_info_list:type_name -> e2sm_rmet.v1.MeasurementInfoList
	7,  // 57: e2sm_rmet.v1.E2SmRmetActionDefinitionFormat1.granul_period:type_name -> e2sm_rmet.v1.GranularityPeriod
	10, // 58: e2sm_rmet.v1.E2SmRmetActionDefinitionFormat1.subscript_id:type_name -> e2sm_rmet.v1.SubscriptionId
	53, // 59: e2sm_rmet.v1.E2SmRmetIndicationHeader.indication_header_formats:type_name -> e2sm_rmet.v1.IndicationHeaderFormats
	54, // 60: e2sm_rmet.v1.IndicationHeaderFormats.indication_header_format1:type_name -> e2sm_rmet.v1.E2SmRmetIndicationHeaderFormat1
	68, // 61: e2sm_rmet.v1.E2SmRmetIndicationHeaderFormat1.collet_start_time:type_name -> e2sm_rmet.v1.TimeStamp
	11, // 62: e2sm_rmet.v1.E2SmRmetIndicationHeaderFormat1.rmet_node_id:type_name -> e2sm_rmet.v1.GlobalRmetnodeId
	56, // 63: e2sm_rmet.v1.E2SmRmetIndicationMessage.indication_message_formats:type_name -> e2sm_rmet.v1.IndicationMessageFormats
	57, // 64: e2sm_rmet.v1.IndicationMessageFormats.indication_message_format1:type_name -> e2sm_rmet.v1.E2SmRmetIndicationMessageFormat1
	10, // 65: e2sm_rmet.v1.E2SmRmetIndicationMessageFormat1.subscript_id:type_name -> e2sm_rmet.v1.SubscriptionId
	64, // 66: e2sm_rmet.v1.E2SmRmetIndicationMessageFormat1.cell_obj_id:type_name -> e2sm_rmet.v1.CellObjectId
	7,  // 67: e2sm_rmet.v1.E2SmRmetIndicationMessageFormat1.granul_period:type_name -> e2sm_rmet.v1.GranularityPeriod
	39, // 68: e2sm_rmet.v1.E2SmRmetIndicationMessageFormat1.meas_info_list:type_name -> e2sm_rmet.v1.MeasurementInfoList
	41, // 69: e2sm_rmet.v1.E2SmRmetIndicationMessageFormat1.meas_data:type_name -> e2sm_rmet.v1.MeasurementData
	26, // 70: e2sm_rmet.v1.E2SmRmetRanfunctionDescription.ran_function_name:type_name -> e2sm_rmet.v1.RanfunctionName
	59, // 71: e2sm_rmet.v1.E2SmRmetRanfunctionDescription.ric_rmet_node_list:type_name -> e2sm_rmet.v1.RicRmetnodeItem
	61, // 72: e2sm_rmet.v1.E2SmRmetRanfunctionDescription.ric_event_trigger_style_list:type_name -> e2sm_rmet.v1.RicEventTriggerStyleItem
	62, // 73: e2sm_rmet.v1.E2SmRmetRanfunctionDescription.ric_report_style_list:type_name -> e2sm_rmet.v1.RicReportStyleItem
	11, // 74: e2sm_rmet.v1.RicRmetnodeItem.ric_rmetnode_type:type_name -> e2sm_rmet.v1.GlobalRmetnodeId
	60, // 75: e2sm_rmet.v1.RicRmetnodeItem.cell_measurement_object_list:type_name -> e2sm_rmet.v1.CellMeasurementObjectItem
	64, // 76: e2sm_rmet.v1.CellMeasurementObjectItem.cell_object_id:type_name -> e2sm_rmet.v1.CellObjectId
	2,  // 77: e2sm_rmet.v1.CellMeasurementObjectItem.cell_global_id:type_name -> e2sm_rmet.v1.CellGlobalId
	27, // 78: e2sm_rmet.v1.RicEventTriggerStyleItem.ric_event_trigger_style_type:type_name -> e2sm_rmet.v1.RicStyleType
	63, // 79: e2sm_rmet.v1.RicEventTriggerStyleItem.ric_event_trigger_style_name:type_name -> e2sm_rmet.v1.RicStyleName
	28, // 80: e2sm_rmet.v1.RicEventTriggerStyleItem.ric_event_trigger_format_type:type_name -> e2sm_rmet.v1.RicFormatType
	27, // 81: e2sm_rmet.v1.RicReportStyleItem.ric_report_style_type:type_name -> e2sm_rmet.v1.RicStyleType
	63, // 82: e2sm_rmet.v1.RicReportStyleItem.ric_report_style_name:type_name -> e2sm_rmet.v1.RicStyleName
	28, // 83: e2sm_rmet.v1.RicReportStyleItem.ric_action_format_type:type_name -> e2sm_rmet.v1.RicFormatType
	44, // 84: e2sm_rmet.v1.RicReportStyleItem.meas_info_action_list:type_name -> e2sm_rmet.v1.MeasurementInfoActionList
	28, // 85: e2sm_rmet.v1.RicReportStyleItem.ric_indication_header_format_type:type_name -> e2sm_rmet.v1.RicFormatType
	28, // 86: e2sm_rmet.v1.RicReportStyleItem.ric_indication_message_format_type:type_name -> e2sm_rmet.v1.RicFormatType
	72, // 87: e2sm_rmet.v1.EutracellIdentity.value:type_name -> asn1.v1.BitString
	72, // 88: e2sm_rmet.v1.NrcellIdentity.value:type_name -> asn1.v1.BitString
	89, // [89:89] is the sub-list for method output_type
	89, // [89:89] is the sub-list for method input_type
	89, // [89:89] is the sub-list for extension type_name
	89, // [89:89] is the sub-list for extension extendee
	0,  // [0:89] is the sub-list for field type_name
}

func init() { file_e2sm_rmet_v1_e2sm_rmet_proto_init() }
func file_e2sm_rmet_v1_e2sm_rmet_proto_init() {
	if File_e2sm_rmet_v1_e2sm_rmet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Eutracgi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nrcgi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellGlobalId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Snssai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FiveQi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qci); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Arp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GranularityPeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementTypeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalRmetnodeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalRmetnodeGnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalgNbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbCuUpId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbDuId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbIdChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalRmetnodeEnGnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalenGnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalRmetnodeNgEnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalngeNbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnbIdChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalRmetnodeEnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalEnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicStyleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicFormatType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofRmetnodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofRicstyles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofMeasurementInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofMeasurementRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofMeasurementValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxofUe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ueid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ueitem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uelist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementInfoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementRecordItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementInfoActionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementInfoActionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRmetEventTriggerDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTriggerDefinitionFormats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRmetEventTriggerDefinitionFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRmetActionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionDefinitionFormats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRmetActionDefinitionFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRmetIndicationHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndicationHeaderFormats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRmetIndicationHeaderFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRmetIndicationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndicationMessageFormats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRmetIndicationMessageFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRmetRanfunctionDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicRmetnodeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellMeasurementObjectItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicEventTriggerStyleItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicReportStyleItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicStyleName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellObjectId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementTypeName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlmnIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeStamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EutracellIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrcellIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uetag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*CellGlobalId_NrCgi)(nil),
		(*CellGlobalId_EUtraCgi)(nil),
	}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*MeasurementType_MeasName)(nil),
		(*MeasurementType_MeasId)(nil),
	}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*GlobalRmetnodeId_GNb)(nil),
		(*GlobalRmetnodeId_EnGNb)(nil),
		(*GlobalRmetnodeId_NgENb)(nil),
		(*GlobalRmetnodeId_ENb)(nil),
	}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*GnbIdChoice_GnbId)(nil),
	}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*EngnbId_GNbId)(nil),
	}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*EnbIdChoice_EnbIdMacro)(nil),
		(*EnbIdChoice_EnbIdShortmacro)(nil),
		(*EnbIdChoice_EnbIdLongmacro)(nil),
	}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*EnbId_MacroENbId)(nil),
		(*EnbId_HomeENbId)(nil),
	}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[26].OneofWrappers = []interface{}{}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[43].OneofWrappers = []interface{}{
		(*MeasurementRecordItem_Integer)(nil),
		(*MeasurementRecordItem_Real)(nil),
		(*MeasurementRecordItem_NoValue)(nil),
	}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[45].OneofWrappers = []interface{}{}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[47].OneofWrappers = []interface{}{
		(*EventTriggerDefinitionFormats_EventDefinitionFormat1)(nil),
	}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[50].OneofWrappers = []interface{}{
		(*ActionDefinitionFormats_ActionDefinitionFormat1)(nil),
	}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[53].OneofWrappers = []interface{}{
		(*IndicationHeaderFormats_IndicationHeaderFormat1)(nil),
	}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[54].OneofWrappers = []interface{}{}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[56].OneofWrappers = []interface{}{
		(*IndicationMessageFormats_IndicationMessageFormat1)(nil),
	}
	file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes[57].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_e2sm_rmet_v1_e2sm_rmet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   72,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_e2sm_rmet_v1_e2sm_rmet_proto_goTypes,
		DependencyIndexes: file_e2sm_rmet_v1_e2sm_rmet_proto_depIdxs,
		MessageInfos:      file_e2sm_rmet_v1_e2sm_rmet_proto_msgTypes,
	}.Build()
	File_e2sm_rmet_v1_e2sm_rmet_proto = out.File
	file_e2sm_rmet_v1_e2sm_rmet_proto_rawDesc = nil
	file_e2sm_rmet_v1_e2sm_rmet_proto_goTypes = nil
	file_e2sm_rmet_v1_e2sm_rmet_proto_depIdxs = nil
}
